/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./public/js/raw/plain/typequiz.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./public/js/lib/ResponsiveVoice.js":
/*!******************************************!*\
  !*** ./public/js/lib/ResponsiveVoice.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * @license ResponsiveVoice JS v1.5.7\n *\n * (c) 2015-2017 LearnBrite\n *\n * License: http://responsivevoice.org/license\n */\nif (typeof responsiveVoice != 'undefined') {\n  console.log('ResponsiveVoice already loaded');\n  console.log(responsiveVoice);\n} else {\n  var ResponsiveVoice = function ResponsiveVoice() {\n    var self = this;\n    self.version = \"1.5.7\";\n    console.log(\"ResponsiveVoice r\" + self.version); // Our own collection of voices\n\n    self.responsivevoices = [{\n      name: 'UK English Female',\n      flag: 'gb',\n      gender: 'f',\n      voiceIDs: [3, 5, 1, 6, 7, 171, 278, 201, 257, 286, 342, 258, 287, 343, 8]\n    }, {\n      name: 'UK English Male',\n      flag: 'gb',\n      gender: 'm',\n      voiceIDs: [0, 4, 2, 75, 277, 202, 256, 285, 341, 159, 6, 7]\n    }, {\n      name: 'US English Female',\n      flag: 'us',\n      gender: 'f',\n      voiceIDs: [39, 40, 41, 42, 43, 173, 205, 204, 235, 283, 339, 44]\n    }, {\n      name: 'Arabic Male',\n      flag: 'ar',\n      gender: 'm',\n      voiceIDs: [96, 95, 97, 196, 98],\n      deprecated: true\n    }, //DEPRECATED - NO LONGER SUPPORTED\n    {\n      name: 'Arabic Female',\n      flag: 'ar',\n      gender: 'f',\n      voiceIDs: [96, 95, 97, 196, 98]\n    }, {\n      name: 'Armenian Male',\n      flag: 'hy',\n      gender: 'f',\n      voiceIDs: [99]\n    }, {\n      name: 'Australian Female',\n      flag: 'au',\n      gender: 'f',\n      voiceIDs: [87, 86, 5, 276, 201, 88]\n    }, {\n      name: 'Brazilian Portuguese Female',\n      flag: 'br',\n      gender: 'f',\n      voiceIDs: [245, 124, 123, 125, 186, 223, 126]\n    }, {\n      name: 'Chinese Female',\n      flag: 'cn',\n      gender: 'f',\n      voiceIDs: [249, 58, 59, 60, 155, 191, 281, 231, 268, 297, 353, 269, 298, 354, 61]\n    }, {\n      name: 'Chinese (Hong Kong) Female',\n      flag: 'hk',\n      gender: 'f',\n      voiceIDs: [192, 193, 232, 250, 251, 270, 299, 355, 252]\n    }, {\n      name: 'Chinese Taiwan Female',\n      flag: 'tw',\n      gender: 'f',\n      voiceIDs: [194, 233, 253, 254, 305, 322, 361, 319, 336, 375, 255]\n    }, {\n      name: 'Czech Female',\n      flag: 'cz',\n      gender: 'f',\n      voiceIDs: [101, 100, 102, 197, 103]\n    }, {\n      name: 'Danish Female',\n      flag: 'dk',\n      gender: 'f',\n      voiceIDs: [105, 104, 106, 198, 107]\n    }, {\n      name: 'Deutsch Female',\n      flag: 'de',\n      gender: 'f',\n      voiceIDs: [27, 28, 29, 30, 31, 78, 170, 275, 199, 261, 290, 346, 262, 291, 347, 32]\n    }, {\n      name: 'Dutch Female',\n      flag: 'nl',\n      gender: 'f',\n      voiceIDs: [243, 219, 84, 157, 158, 184, 45]\n    }, {\n      name: 'Finnish Female',\n      flag: 'fi',\n      gender: 'f',\n      voiceIDs: [90, 89, 91, 209, 92]\n    }, {\n      name: 'French Female',\n      flag: 'fr',\n      gender: 'f',\n      voiceIDs: [240, 21, 22, 23, 77, 178, 279, 210, 266, 295, 351, 304, 321, 360, 26]\n    }, {\n      name: 'Greek Female',\n      flag: 'gr',\n      gender: 'f',\n      voiceIDs: [62, 63, 80, 200, 64]\n    }, // {name: 'Haitian Creole Female', flag: 'ht', gender: 'f', voiceIDs: [109]}, //DEPRECATED - NO LONGER SUPPORTED\n    {\n      name: 'Hindi Female',\n      flag: 'hi',\n      gender: 'f',\n      voiceIDs: [247, 66, 154, 179, 213, 259, 288, 344, 67]\n    }, {\n      name: 'Hungarian Female',\n      flag: 'hu',\n      gender: 'f',\n      voiceIDs: [9, 10, 81, 214, 11]\n    }, {\n      name: 'Indonesian Female',\n      flag: 'id',\n      gender: 'f',\n      voiceIDs: [241, 111, 112, 180, 215, 113]\n    }, {\n      name: 'Italian Female',\n      flag: 'it',\n      gender: 'f',\n      voiceIDs: [242, 33, 34, 35, 36, 37, 79, 181, 216, 271, 300, 356, 38]\n    }, {\n      name: 'Japanese Female',\n      flag: 'jp',\n      gender: 'f',\n      voiceIDs: [248, 50, 51, 52, 153, 182, 280, 217, 273, 302, 358, 274, 303, 359, 53]\n    }, {\n      name: 'Korean Female',\n      flag: 'kr',\n      gender: 'f',\n      voiceIDs: [54, 55, 56, 156, 183, 218, 306, 323, 362, 57]\n    }, {\n      name: 'Latin Female',\n      flag: 'va',\n      gender: 'f',\n      voiceIDs: [114]\n    }, {\n      name: 'Norwegian Female',\n      flag: 'no',\n      gender: 'f',\n      voiceIDs: [72, 73, 221, 74]\n    }, {\n      name: 'Polish Female',\n      flag: 'pl',\n      gender: 'f',\n      voiceIDs: [244, 120, 119, 121, 185, 222, 267, 296, 352, 122]\n    }, {\n      name: 'Portuguese Female',\n      flag: 'br',\n      gender: 'f',\n      voiceIDs: [128, 127, 129, 187, 224, 272, 301, 357, 130]\n    }, {\n      name: 'Romanian Male',\n      flag: 'ro',\n      gender: 'm',\n      voiceIDs: [151, 150, 152, 225, 46]\n    }, {\n      name: 'Russian Female',\n      flag: 'ru',\n      gender: 'f',\n      voiceIDs: [246, 47, 48, 83, 188, 226, 260, 289, 345, 49]\n    }, {\n      name: 'Slovak Female',\n      flag: 'sk',\n      gender: 'f',\n      voiceIDs: [133, 132, 134, 227, 135]\n    }, {\n      name: 'Spanish Female',\n      flag: 'es',\n      gender: 'f',\n      voiceIDs: [19, 238, 16, 17, 18, 20, 76, 174, 207, 263, 292, 348, 264, 293, 349, 15]\n    }, {\n      name: 'Spanish Latin American Female',\n      flag: 'es',\n      gender: 'f',\n      voiceIDs: [239, 137, 136, 138, 175, 208, 265, 294, 350, 139]\n    }, {\n      name: 'Swedish Female',\n      flag: 'sv',\n      gender: 'f',\n      voiceIDs: [85, 148, 149, 228, 65]\n    }, {\n      name: 'Tamil Male',\n      flag: 'hi',\n      gender: 'm',\n      voiceIDs: [141]\n    }, {\n      name: 'Thai Female',\n      flag: 'th',\n      gender: 'f',\n      voiceIDs: [143, 142, 144, 189, 229, 145]\n    }, {\n      name: 'Turkish Female',\n      flag: 'tr',\n      gender: 'f',\n      voiceIDs: [69, 70, 82, 190, 230, 71]\n    }, {\n      name: 'Afrikaans Male',\n      flag: 'af',\n      gender: 'm',\n      voiceIDs: [93]\n    }, {\n      name: 'Albanian Male',\n      flag: 'sq',\n      gender: 'm',\n      voiceIDs: [94]\n    }, {\n      name: 'Bosnian Male',\n      flag: 'bs',\n      gender: 'm',\n      voiceIDs: [14]\n    }, {\n      name: 'Catalan Male',\n      flag: 'catalonia',\n      gender: 'm',\n      voiceIDs: [68]\n    }, {\n      name: 'Croatian Male',\n      flag: 'hr',\n      gender: 'm',\n      voiceIDs: [13]\n    }, {\n      name: 'Czech Male',\n      flag: 'cz',\n      gender: 'm',\n      voiceIDs: [161]\n    }, {\n      name: 'Danish Male',\n      flag: 'da',\n      gender: 'm',\n      voiceIDs: [162],\n      deprecated: true\n    }, //DEPRECATED - NO LONGER SUPPORTED\n    {\n      name: 'Esperanto Male',\n      flag: 'eo',\n      gender: 'm',\n      voiceIDs: [108]\n    }, {\n      name: 'Finnish Male',\n      flag: 'fi',\n      gender: 'm',\n      voiceIDs: [160],\n      deprecated: true\n    }, //DEPRECATED - NO LONGER SUPPORTED\n    {\n      name: 'Greek Male',\n      flag: 'gr',\n      gender: 'm',\n      voiceIDs: [163],\n      deprecated: true\n    }, //DEPRECATED - NO LONGER SUPPORTED\n    {\n      name: 'Hungarian Male',\n      flag: 'hu',\n      gender: 'm',\n      voiceIDs: [164]\n    }, {\n      name: 'Icelandic Male',\n      flag: 'is',\n      gender: 'm',\n      voiceIDs: [110]\n    }, {\n      name: 'Latin Male',\n      flag: 'va',\n      gender: 'm',\n      voiceIDs: [165],\n      deprecated: true\n    }, //DEPRECATED - NO LONGER SUPPORTED\n    {\n      name: 'Latvian Male',\n      flag: 'lv',\n      gender: 'm',\n      voiceIDs: [115]\n    }, {\n      name: 'Macedonian Male',\n      flag: 'mk',\n      gender: 'm',\n      voiceIDs: [116]\n    }, {\n      name: 'Moldavian Male',\n      flag: 'md',\n      gender: 'm',\n      voiceIDs: [117]\n    }, {\n      name: 'Montenegrin Male',\n      flag: 'me',\n      gender: 'm',\n      voiceIDs: [118]\n    }, {\n      name: 'Norwegian Male',\n      flag: 'no',\n      gender: 'm',\n      voiceIDs: [166]\n    }, {\n      name: 'Serbian Male',\n      flag: 'sr',\n      gender: 'm',\n      voiceIDs: [12]\n    }, {\n      name: 'Serbo-Croatian Male',\n      flag: 'hr',\n      gender: 'm',\n      voiceIDs: [131]\n    }, {\n      name: 'Slovak Male',\n      flag: 'sk',\n      gender: 'm',\n      voiceIDs: [167],\n      deprecated: true\n    }, //DEPRECATED - NO LONGER SUPPORTED\n    {\n      name: 'Swahili Male',\n      flag: 'sw',\n      gender: 'm',\n      voiceIDs: [140]\n    }, {\n      name: 'Swedish Male',\n      flag: 'sv',\n      gender: 'm',\n      voiceIDs: [168],\n      deprecated: true\n    }, //DEPRECATED - NO LONGER SUPPORTED\n    {\n      name: 'Vietnamese Male',\n      flag: 'vi',\n      gender: 'm',\n      voiceIDs: [146],\n      deprecated: true\n    }, //DEPRECATED - NO LONGER SUPPORTED\n    {\n      name: 'Welsh Male',\n      flag: 'cy',\n      gender: 'm',\n      voiceIDs: [147]\n    }, {\n      name: 'US English Male',\n      flag: 'us',\n      gender: 'm',\n      voiceIDs: [234, 282, 338, 236, 284, 340, 237, 2, 4, 0, 6, 7, 75, 159]\n    }, //[195,169]}, original service is (temporary?) down\n    {\n      name: 'Fallback UK Female',\n      flag: 'gb',\n      gender: 'f',\n      voiceIDs: [8]\n    }]; //All voices available on every system and device\n\n    self.voicecollection = [{\n      name: 'Google UK English Male'\n    }, //0 male uk android/chrome\n    {\n      name: 'Agnes'\n    }, //1 female us safari mac\n    {\n      name: 'Daniel Compact'\n    }, //2 male us safari mac\n    {\n      name: 'Google UK English Female'\n    }, //3 female uk android/chrome\n    {\n      name: 'en-GB',\n      rate: 0.25,\n      pitch: 1\n    }, //4 male uk IOS\n    {\n      name: 'en-AU',\n      rate: 0.25,\n      pitch: 1\n    }, //5 female english IOS\n    {\n      name: 'inglÃ©s Reino Unido'\n    }, //6 spanish english android\n    {\n      name: 'English United Kingdom'\n    }, //7 english english android\n    {\n      name: 'Fallback en-GB Female',\n      lang: 'en-GB',\n      fallbackvoice: true\n    }, //8 fallback english female\n    {\n      name: 'Eszter Compact'\n    }, //9 Hungarian mac\n    {\n      name: 'hu-HU',\n      rate: 0.4\n    }, //10 Hungarian iOS\n    {\n      name: 'Fallback Hungarian',\n      lang: 'hu',\n      fallbackvoice: true,\n      service: 'g2'\n    }, //11 Hungarian fallback\n    {\n      name: 'Fallback Serbian',\n      lang: 'sr',\n      fallbackvoice: true\n    }, //12 Serbian fallback\n    {\n      name: 'Fallback Croatian',\n      lang: 'hr',\n      fallbackvoice: true\n    }, //13 Croatian fallback\n    {\n      name: 'Fallback Bosnian',\n      lang: 'bs',\n      fallbackvoice: true\n    }, //14 Bosnian fallback\n    {\n      name: 'Fallback Spanish',\n      lang: 'es',\n      fallbackvoice: true\n    }, //15 Spanish fallback\n    {\n      name: 'Spanish Spain'\n    }, //16 female es android/chrome\n    {\n      name: 'espaÃ±ol EspaÃ±a'\n    }, //17 female es android/chrome\n    {\n      name: 'Diego Compact',\n      rate: 0.3\n    }, //18 male es mac\n    {\n      name: 'Google EspaÃ±ol'\n    }, //19 male es chrome\n    {\n      name: 'es-ES',\n      rate: 0.20\n    }, //20 male es iOS\n    {\n      name: 'Google FranÃ§ais'\n    }, //21 FR chrome\n    {\n      name: 'French France'\n    }, //22 android/chrome\n    {\n      name: 'francÃ©s Francia'\n    }, //23 android/chrome\n    {\n      name: 'Virginie Compact',\n      rate: 0.5\n    }, //24 mac\n    {\n      name: 'fr-FR',\n      rate: 0.25\n    }, //25 iOS\n    {\n      name: 'Fallback French',\n      lang: 'fr',\n      fallbackvoice: true\n    }, //26 fallback\n    {\n      name: 'Google Deutsch'\n    }, //27 DE chrome\n    {\n      name: 'German Germany'\n    }, //28 android/chrome\n    {\n      name: 'alemÃ¡n Alemania'\n    }, //29 android/chrome\n    {\n      name: 'Yannick Compact',\n      rate: 0.5\n    }, //30 mac\n    {\n      name: 'de-DE',\n      rate: 0.25\n    }, //31 iOS\n    {\n      name: 'Fallback Deutsch',\n      lang: 'de',\n      fallbackvoice: true\n    }, //32 fallback\n    {\n      name: 'Google Italiano'\n    }, //33 IT chrome\n    {\n      name: 'Italian Italy'\n    }, //34 android/chrome\n    {\n      name: 'italiano Italia'\n    }, //35 android/chrome\n    {\n      name: 'Paolo Compact',\n      rate: 0.5\n    }, //36 mac\n    {\n      name: 'it-IT',\n      rate: 0.25\n    }, //37 iOS\n    {\n      name: 'Fallback Italian',\n      lang: 'it',\n      fallbackvoice: true\n    }, //38 fallback\n    {\n      name: 'Google US English',\n      timerSpeed: 1\n    }, //39 EN chrome\n    {\n      name: 'English United States'\n    }, //40 android/chrome\n    {\n      name: 'inglÃ©s Estados Unidos'\n    }, //41 android/chrome\n    {\n      name: 'Vicki'\n    }, //42 mac\n    {\n      name: 'en-US',\n      rate: 0.2,\n      pitch: 1,\n      timerSpeed: 1.3\n    }, //43 iOS\n    {\n      name: 'Fallback English',\n      lang: 'en-US',\n      fallbackvoice: true,\n      timerSpeed: 0\n    }, //44 fallback\n    {\n      name: 'Fallback Dutch',\n      lang: 'nl',\n      fallbackvoice: true,\n      timerSpeed: 0\n    }, //45 fallback\n    {\n      name: 'Fallback Romanian',\n      lang: 'ro',\n      fallbackvoice: true\n    }, //46 Romanian Male fallback\n    {\n      name: 'Milena Compact'\n    }, //47 Russian mac\n    {\n      name: 'ru-RU',\n      rate: 0.25\n    }, //48 iOS\n    {\n      name: 'Fallback Russian',\n      lang: 'ru',\n      fallbackvoice: true\n    }, //49 Russian fallback\n    {\n      name: 'Google æ—¥æœ¬äºº',\n      timerSpeed: 1\n    }, //50 JP Chrome\n    {\n      name: 'Kyoko Compact'\n    }, //51 Japanese mac\n    {\n      name: 'ja-JP',\n      rate: 0.25\n    }, //52 iOS\n    {\n      name: 'Fallback Japanese',\n      lang: 'ja',\n      fallbackvoice: true\n    }, //53 Japanese fallback\n    {\n      name: 'Google í•œêµ­ì˜',\n      timerSpeed: 1\n    }, //54 KO Chrome\n    {\n      name: 'Narae Compact'\n    }, //55 Korean mac\n    {\n      name: 'ko-KR',\n      rate: 0.25\n    }, //56 iOS\n    {\n      name: 'Fallback Korean',\n      lang: 'ko',\n      fallbackvoice: true\n    }, //57 Korean fallback\n    {\n      name: 'Google ä¸­å›½çš„',\n      timerSpeed: 1\n    }, //58 CN Chrome\n    {\n      name: 'Ting-Ting Compact'\n    }, //59 Chinese mac\n    {\n      name: 'zh-CN',\n      rate: 0.25\n    }, //60 iOS\n    {\n      name: 'Fallback Chinese',\n      lang: 'zh-CN',\n      fallbackvoice: true\n    }, //61 Chinese fallback\n    {\n      name: 'Alexandros Compact'\n    }, //62 Greek Male Mac\n    {\n      name: 'el-GR',\n      rate: 0.25\n    }, //63 iOS\n    {\n      name: 'Fallback Greek',\n      lang: 'el',\n      fallbackvoice: true,\n      service: 'g2'\n    }, //64 Greek Female fallback\n    {\n      name: 'Fallback Swedish',\n      lang: 'sv',\n      fallbackvoice: true,\n      service: 'g2'\n    }, //65 Swedish Female fallback\n    {\n      name: 'hi-IN',\n      rate: 0.25\n    }, //66 iOS\n    {\n      name: 'Fallback Hindi',\n      lang: 'hi',\n      fallbackvoice: true\n    }, //67 Hindi Female fallback\n    {\n      name: 'Fallback Catalan',\n      lang: 'ca',\n      fallbackvoice: true\n    }, //68 Catalan Male fallback\n    {\n      name: 'Aylin Compact'\n    }, //69 Turkish Female Mac\n    {\n      name: 'tr-TR',\n      rate: 0.25\n    }, //70 iOS Turkish Female\n    {\n      name: 'Fallback Turkish',\n      lang: 'tr',\n      fallbackvoice: true\n    }, //71 Turkish Female fallback\n    {\n      name: 'Stine Compact'\n    }, //72 Norweigan Male Mac\n    {\n      name: 'no-NO',\n      rate: 0.25\n    }, //73 iOS Female\n    {\n      name: 'Fallback Norwegian',\n      lang: 'no',\n      fallbackvoice: true,\n      service: 'g2'\n    }, //74 Norwegian Female fallback\n    {\n      name: 'Daniel'\n    }, //75 English UK male uk safari 8 mac\n    {\n      name: 'Monica'\n    }, //76 Spanish female es safari 8 mac\n    {\n      name: 'Amelie'\n    }, //77 French Canadian female fr safari 8 mac\n    {\n      name: 'Anna'\n    }, //78 female de safari 8 mac\n    {\n      name: 'Alice'\n    }, //79 Italian female it safari 8 mac\n    {\n      name: 'Melina'\n    }, //80 Greek female gr safari 8 mac\n    {\n      name: 'Mariska'\n    }, //81 Hungarian female hu safari 8 mac\n    {\n      name: 'Yelda'\n    }, //82 Turkish female tr safari 8 mac\n    {\n      name: 'Milena'\n    }, //83 Russian female ru safari 8 mac\n    //Gender Disparity\n    {\n      name: 'Xander'\n    }, //84 Dutch female nl safari 8 mac\n    {\n      name: 'Alva'\n    }, //85 Swedish female sv safari 8 mac\n    // Gender Disparity\n    {\n      name: 'Lee Compact'\n    }, //86 Australian Male Mac\n    {\n      name: 'Karen'\n    }, //87 Australian Female safari 8 mac\n    {\n      name: 'Fallback Australian',\n      lang: 'en-AU',\n      fallbackvoice: true\n    }, //88 Australian Female fallback\n    // Gender Disparity\n    {\n      name: 'Mikko Compact'\n    }, //89 Finnish Male Mac\n    {\n      name: 'Satu'\n    }, //90 Finnish Female safari 8 mac\n    {\n      name: 'fi-FI',\n      rate: 0.25\n    }, //91 iOS\n    {\n      name: 'Fallback Finnish',\n      lang: 'fi',\n      fallbackvoice: true,\n      service: 'g2'\n    }, //92 Finnish Female fallback\n    {\n      name: 'Fallback Afrikans',\n      lang: 'af',\n      fallbackvoice: true\n    }, //93 Afrikans Male fallback\n    {\n      name: 'Fallback Albanian',\n      lang: 'sq',\n      fallbackvoice: true\n    }, //94 Albanian Male fallback\n    {\n      name: 'Maged Compact'\n    }, //95 Arabic Male Mac\n    {\n      name: 'Tarik'\n    }, //96 Arabic Male safari 8 mac\n    {\n      name: 'ar-SA',\n      rate: 0.25\n    }, //97 iOS\n    {\n      name: 'Fallback Arabic',\n      lang: 'ar',\n      fallbackvoice: true,\n      service: 'g2'\n    }, //98 Arabic Female fallback\n    {\n      name: 'Fallback Armenian',\n      lang: 'hy',\n      fallbackvoice: true,\n      service: 'g2'\n    }, //99 Armenian Male fallback\n    {\n      name: 'Zuzana Compact'\n    }, //100 Czech Female Mac\n    {\n      name: 'Zuzana'\n    }, //101 Czech Female safari 8 mac\n    {\n      name: 'cs-CZ',\n      rate: 0.25\n    }, //102 iOS\n    {\n      name: 'Fallback Czech',\n      lang: 'cs',\n      fallbackvoice: true,\n      service: 'g2'\n    }, //103 Czech Female fallback\n    {\n      name: 'Ida Compact'\n    }, //104 Danish Female Mac\n    {\n      name: 'Sara'\n    }, //105 Danish Female safari 8 mac\n    {\n      name: 'da-DK',\n      rate: 0.25\n    }, //106 iOS\n    {\n      name: 'Fallback Danish',\n      lang: 'da',\n      fallbackvoice: true,\n      service: 'g2'\n    }, //107 Danish Female fallback\n    {\n      name: 'Fallback Esperanto',\n      lang: 'eo',\n      fallbackvoice: true\n    }, //108 Esperanto Male fallback\n    {\n      name: 'Fallback Haitian Creole',\n      lang: 'ht',\n      fallbackvoice: true\n    }, //109 Haitian Creole Female fallback\n    {\n      name: 'Fallback Icelandic',\n      lang: 'is',\n      fallbackvoice: true\n    }, //110 Icelandic Male fallback\n    {\n      name: 'Damayanti'\n    }, //111 Indonesian Female safari 8 mac\n    {\n      name: 'id-ID',\n      rate: 0.25\n    }, //112 iOS\n    {\n      name: 'Fallback Indonesian',\n      lang: 'id',\n      fallbackvoice: true\n    }, //113 Indonesian Female fallback\n    {\n      name: 'Fallback Latin',\n      lang: 'la',\n      fallbackvoice: true,\n      service: 'g2'\n    }, //114 Latin Female fallback\n    {\n      name: 'Fallback Latvian',\n      lang: 'lv',\n      fallbackvoice: true\n    }, //115 Latvian Male fallback\n    {\n      name: 'Fallback Macedonian',\n      lang: 'mk',\n      fallbackvoice: true\n    }, //116 Macedonian Male fallback\n    {\n      name: 'Fallback Moldavian',\n      lang: 'mo',\n      fallbackvoice: true,\n      service: 'g2'\n    }, //117 Moldavian Male fallback\n    {\n      name: 'Fallback Montenegrin',\n      lang: 'sr-ME',\n      fallbackvoice: true\n    }, //118 Montenegrin Male fallback\n    {\n      name: 'Agata Compact'\n    }, //119 Polish Female Mac\n    {\n      name: 'Zosia'\n    }, //120 Polish Female safari 8 mac\n    {\n      name: 'pl-PL',\n      rate: 0.25\n    }, //121 iOS\n    {\n      name: 'Fallback Polish',\n      lang: 'pl',\n      fallbackvoice: true\n    }, //122 Polish Female fallback\n    {\n      name: 'Raquel Compact'\n    }, //123 Brazilian Portugese Female Male Mac\n    {\n      name: 'Luciana'\n    }, //124 Brazilian Portugese Female safari 8 mac\n    {\n      name: 'pt-BR',\n      rate: 0.25\n    }, //125 iOS\n    {\n      name: 'Fallback Brazilian Portugese',\n      lang: 'pt-BR',\n      fallbackvoice: true,\n      service: 'g2'\n    }, //126 Brazilian Portugese Female fallback\n    {\n      name: 'Joana Compact'\n    }, //127 Portuguese Female Mac\n    {\n      name: 'Joana'\n    }, //128 Portuguese Female safari 8 mac\n    {\n      name: 'pt-PT',\n      rate: 0.25\n    }, //129 iOS\n    {\n      name: 'Fallback Portuguese',\n      lang: 'pt-PT',\n      fallbackvoice: true\n    }, //130 Portuguese Female fallback\n    {\n      name: 'Fallback Serbo-Croation',\n      lang: 'sh',\n      fallbackvoice: true,\n      service: 'g2'\n    }, //131 Serbo-Croation Male fallback\n    {\n      name: 'Laura Compact'\n    }, //132 Slovak Female Mac\n    {\n      name: 'Laura'\n    }, //133 Slovak Female safari 8 mac\n    {\n      name: 'sk-SK',\n      rate: 0.25\n    }, //134 iOS\n    {\n      name: 'Fallback Slovak',\n      lang: 'sk',\n      fallbackvoice: true,\n      service: 'g2'\n    }, //135 Slovak Female fallback\n    //Gender Disparity\n    {\n      name: 'Javier Compact'\n    }, //136 Spanish (Latin American) Male Mac\n    {\n      name: 'Paulina'\n    }, //137 Spanish Mexican Female safari 8 mac\n    {\n      name: 'es-MX',\n      rate: 0.25\n    }, //138 iOS\n    {\n      name: 'Fallback Spanish (Latin American)',\n      lang: 'es-419',\n      fallbackvoice: true,\n      service: 'g2'\n    }, //139 Spanish (Latin American) Female fallback\n    {\n      name: 'Fallback Swahili',\n      lang: 'sw',\n      fallbackvoice: true\n    }, //140 Swahili Male fallback\n    {\n      name: 'Fallback Tamil',\n      lang: 'ta',\n      fallbackvoice: true\n    }, //141 Tamil Male fallback\n    {\n      name: 'Narisa Compact'\n    }, //142 Thai Female Mac\n    {\n      name: 'Kanya'\n    }, //143 Thai Female safari 8 mac\n    {\n      name: 'th-TH',\n      rate: 0.25\n    }, //144 iOS\n    {\n      name: 'Fallback Thai',\n      lang: 'th',\n      fallbackvoice: true\n    }, //145 Thai Female fallback\n    {\n      name: 'Fallback Vietnamese',\n      lang: 'vi',\n      fallbackvoice: true\n    }, //146 Vietnamese Male fallback\n    {\n      name: 'Fallback Welsh',\n      lang: 'cy',\n      fallbackvoice: true\n    }, //147 Welsh Male fallback\n    // Gender Disparity\n    {\n      name: 'Oskar Compact'\n    }, //148 Swedish Male Mac\n    {\n      name: 'sv-SE',\n      rate: 0.25\n    }, //149 iOS\n    // Gender Disparity\n    {\n      name: 'Simona Compact'\n    }, //150 Romanian mac female\n    {\n      name: 'Ioana'\n    }, //151 Romanian Female safari 8 mac\n    {\n      name: 'ro-RO',\n      rate: 0.25\n    }, //152 iOS female\n    {\n      name: 'Kyoko'\n    }, //153 Japanese Female safari 8 mac\n    {\n      name: 'Lekha'\n    }, //154 Hindi Female safari 8 mac\n    {\n      name: 'Ting-Ting'\n    }, //155 Chinese Female safari 8 mac\n    {\n      name: 'Yuna'\n    }, //156 Korean Female safari 8 mac\n    // Gender Disparity\n    {\n      name: 'Xander Compact'\n    }, //157 Dutch male or female nl safari 8 mac\n    {\n      name: 'nl-NL',\n      rate: 0.25\n    }, //158 iOS\n    {\n      name: 'Fallback UK English Male',\n      lang: 'en-GB',\n      fallbackvoice: true,\n      service: 'g1',\n      voicename: 'rjs'\n    }, //159 UK Male fallback\n    {\n      name: 'Finnish Male',\n      lang: 'fi',\n      fallbackvoice: true,\n      service: 'g1',\n      voicename: ''\n    }, //160 Finnish Male fallback\n    {\n      name: 'Czech Male',\n      lang: 'cs',\n      fallbackvoice: true,\n      service: 'g1',\n      voicename: ''\n    }, //161 Czech Male fallback\n    {\n      name: 'Danish Male',\n      lang: 'da',\n      fallbackvoice: true,\n      service: 'g1',\n      voicename: ''\n    }, //162 Danish Male fallback\n    {\n      name: 'Greek Male',\n      lang: 'el',\n      fallbackvoice: true,\n      service: 'g1',\n      voicename: '',\n      rate: 0.25\n    }, //163 Greek Male fallback\n    {\n      name: 'Hungarian Male',\n      lang: 'hu',\n      fallbackvoice: true,\n      service: 'g1',\n      voicename: ''\n    }, //164 Hungarian Male fallback\n    {\n      name: 'Latin Male',\n      lang: 'la',\n      fallbackvoice: true,\n      service: 'g1',\n      voicename: ''\n    }, //165 Latin Male fallback\n    {\n      name: 'Norwegian Male',\n      lang: 'no',\n      fallbackvoice: true,\n      service: 'g1',\n      voicename: ''\n    }, //166 Norwegian Male fallback\n    {\n      name: 'Slovak Male',\n      lang: 'sk',\n      fallbackvoice: true,\n      service: 'g1',\n      voicename: ''\n    }, //167 Slovak Male fallback\n    {\n      name: 'Swedish Male',\n      lang: 'sv',\n      fallbackvoice: true,\n      service: 'g1',\n      voicename: ''\n    }, //168 Swedish Male fallback\n    {\n      name: 'Fallback US English Male',\n      lang: 'en',\n      fallbackvoice: true,\n      service: 'tts-api',\n      voicename: ''\n    }, //169 US English Male fallback\n    {\n      name: 'German Germany',\n      lang: 'de_DE'\n    }, //170 Android 5 German Female\n    {\n      name: 'English United Kingdom',\n      lang: 'en_GB'\n    }, //171 Android 5 English United Kingdom Female\n    {\n      name: 'English India',\n      lang: 'en_IN'\n    }, //172 Android 5 English India Female\n    {\n      name: 'English United States',\n      lang: 'en_US'\n    }, //173 Android 5 English United States Female\n    {\n      name: 'Spanish Spain',\n      lang: 'es_ES'\n    }, //174 Android 5 Spanish Female\n    {\n      name: 'Spanish Mexico',\n      lang: 'es_MX'\n    }, //175 Android 5 Spanish Mexico Female\n    {\n      name: 'Spanish United States',\n      lang: 'es_US'\n    }, //176 Android 5 Spanish Mexico Female\n    {\n      name: 'French Belgium',\n      lang: 'fr_BE'\n    }, //177 Android 5 French Belgium Female\n    {\n      name: 'French France',\n      lang: 'fr_FR'\n    }, //178 Android 5 French France Female\n    {\n      name: 'Hindi India',\n      lang: 'hi_IN'\n    }, //179 Android 5 Hindi India Female\n    {\n      name: 'Indonesian Indonesia',\n      lang: 'in_ID'\n    }, //180 Android 5 Indonesian Female\n    {\n      name: 'Italian Italy',\n      lang: 'it_IT'\n    }, //181 Android 5 Italian Female\n    {\n      name: 'Japanese Japan',\n      lang: 'ja_JP'\n    }, //182 Android 5 Japanese Female\n    {\n      name: 'Korean South Korea',\n      lang: 'ko_KR'\n    }, //183 Android 5 Japanese Female\n    {\n      name: 'Dutch Netherlands',\n      lang: 'nl_NL'\n    }, //184 Android 5 Dutch Female\n    {\n      name: 'Polish Poland',\n      lang: 'pl_PL'\n    }, //185 Android 5 Polish Female\n    {\n      name: 'Portuguese Brazil',\n      lang: 'pt_BR'\n    }, //186 Android 5 Portuguese Brazil Female\n    {\n      name: 'Portuguese Portugal',\n      lang: 'pt_PT'\n    }, //187 Android 5 Portuguese Portugal Female\n    {\n      name: 'Russian Russia',\n      lang: 'ru_RU'\n    }, //188 Android 5 Russian Female\n    {\n      name: 'Thai Thailand',\n      lang: 'th_TH'\n    }, //189 Android 5 Thai Female\n    {\n      name: 'Turkish Turkey',\n      lang: 'tr_TR'\n    }, //190 Android 5 Turkish Female\n    {\n      name: 'Chinese China',\n      lang: 'zh_CN_#Hans'\n    }, //191 Android 5 Chinese China Female\n    {\n      name: 'Chinese Hong Kong',\n      lang: 'zh_HK_#Hans'\n    }, //192 Android 5 Chinese Hong Kong Simplified Female\n    {\n      name: 'Chinese Hong Kong',\n      lang: 'zh_HK_#Hant'\n    }, //193 Android 5 Chinese Hong Kong Traditional Female\n    {\n      name: 'Chinese Taiwan',\n      lang: 'zh_TW_#Hant'\n    }, //194 Android 5 Chinese Taiwan Female\n    {\n      name: 'Alex'\n    }, //195 US English Male safari 8 mac\n    {\n      name: 'Maged',\n      lang: 'ar-SA'\n    }, //196 iOS 9 Arabic Female\n    {\n      name: 'Zuzana',\n      lang: 'cs-CZ'\n    }, //197 iOS 9 Czech Female\n    {\n      name: 'Sara',\n      lang: 'da-DK'\n    }, //198 iOS 9 Danish Female\n    {\n      name: 'Anna',\n      lang: 'de-DE'\n    }, //199 iOS 9 Deutsch Female\n    {\n      name: 'Melina',\n      lang: 'el-GR'\n    }, //200 iOS 9 Greek Female\n    {\n      name: 'Karen',\n      lang: 'en-AU'\n    }, //201 iOS 9 English (AU) Female\n    {\n      name: 'Daniel',\n      lang: 'en-GB'\n    }, //202 iOS 9 English (GB) Male\n    {\n      name: 'Moira',\n      lang: 'en-IE'\n    }, //203 iOS 9 English (IE) Female\n    {\n      name: 'Samantha (Enhanced)',\n      lang: 'en-US'\n    }, //204 iOS 9 English (US) Female\n    {\n      name: 'Samantha',\n      lang: 'en-US'\n    }, //205 iOS 9 English (US) Female\n    {\n      name: 'Tessa',\n      lang: 'en-ZA'\n    }, //206 iOS 9 English Female\n    {\n      name: 'Monica',\n      lang: 'es-ES'\n    }, //207 iOS 9 Spanish Female\n    {\n      name: 'Paulina',\n      lang: 'es-MX'\n    }, //208 iOS 9 Spanish Latin American Female\n    {\n      name: 'Satu',\n      lang: 'fi-FI'\n    }, //209 iOS 9 Finnish Female\n    {\n      name: 'Amelie',\n      lang: 'fr-CA'\n    }, //210 iOS 9 French (CA) Female\n    {\n      name: 'Thomas',\n      lang: 'fr-FR'\n    }, //211 iOS 9 French (FR) Male\n    {\n      name: 'Carmit',\n      lang: 'he-IL'\n    }, //212 iOS 9 Hebrew Female\n    {\n      name: 'Lekha',\n      lang: 'hi-IN'\n    }, //213 iOS 9 Hindi Female\n    {\n      name: 'Mariska',\n      lang: 'hu-HU'\n    }, //214 iOS 9 Hungarian Female\n    {\n      name: 'Damayanti',\n      lang: 'id-ID'\n    }, //215 iOS 9 Indonesian Female\n    {\n      name: 'Alice',\n      lang: 'it-IT'\n    }, //216 iOS 9 Italian Female\n    {\n      name: 'Kyoko',\n      lang: 'ja-JP'\n    }, //217 iOS 9 Japanese Female\n    {\n      name: 'Yuna',\n      lang: 'ko-KR'\n    }, //218 iOS 9 Korean Female\n    {\n      name: 'Ellen',\n      lang: 'nl-BE'\n    }, //219 iOS 9 Dutch Female\n    {\n      name: 'Xander',\n      lang: 'nl-NL'\n    }, //220 iOS 9 Dutch Male\n    {\n      name: 'Nora',\n      lang: 'no-NO'\n    }, //221 iOS 9 Norwegian Female\n    {\n      name: 'Zosia',\n      lang: 'pl-PL'\n    }, //222 iOS 9 Polish Female\n    {\n      name: 'Luciana',\n      lang: 'pt-BR'\n    }, //223 iOS 9 Portuguese (BR) Female\n    {\n      name: 'Joana',\n      lang: 'pt-PT'\n    }, //224 iOS 9 Portuguese (PT) Female\n    {\n      name: 'Ioana',\n      lang: 'ro-RO'\n    }, //225 iOS 9 Romanian Female\n    {\n      name: 'Milena',\n      lang: 'ru-RU'\n    }, //226 iOS 9 Russian Female\n    {\n      name: 'Laura',\n      lang: 'sk-SK'\n    }, //227 iOS 9 Slovak Female\n    {\n      name: 'Alva',\n      lang: 'sv-SE'\n    }, //228 iOS 9 Swedish Female\n    {\n      name: 'Kanya',\n      lang: 'th-TH'\n    }, //229 iOS 9 Thai Female\n    {\n      name: 'Yelda',\n      lang: 'tr-TR'\n    }, //230 iOS 9 Turkish Female\n    {\n      name: 'Ting-Ting',\n      lang: 'zh-CN'\n    }, //231 iOS 9 Chinese (PRC) Female\n    {\n      name: 'Sin-Ji',\n      lang: 'zh-HK'\n    }, //232 iOS 9 Chinese (Hong Kong SAR) Female\n    {\n      name: 'Mei-Jia',\n      lang: 'zh-TW'\n    }, //233 iOS 9 Chinese (Taiwan) Female\n    // Microsoft Edge 14\n    {\n      name: 'Microsoft David Mobile - English (United States)',\n      lang: 'en-US'\n    }, //234 Microsoft Edge David English Male\n    {\n      name: 'Microsoft Zira Mobile - English (United States)',\n      lang: 'en-US'\n    }, //235 Microsoft Edge Zira English Female\n    {\n      name: 'Microsoft Mark Mobile - English (United States)',\n      lang: 'en-US'\n    }, //236 Microsoft Edge Mark English Male\n    {\n      name: 'native',\n      lang: ''\n    }, //237 Chromium Windows native US Male\n    {\n      name: 'Google espaÃ±ol'\n    }, //238 Google Chrome Windows newer name variants Spanish Female\n    {\n      name: 'Google espaÃ±ol de Estados Unidos'\n    }, //239 Google Chrome Windows newer name variants US Spanish Female\n    {\n      name: 'Google franÃ§ais'\n    }, //240 Google Chrome Windows newer name variants French Female\n    {\n      name: 'Google Bahasa Indonesia'\n    }, //241 Google Chrome Windows newer name variants Indonesian Female\n    {\n      name: 'Google italiano'\n    }, //242 Google Chrome Windows newer name variants Italian Female\n    {\n      name: 'Google Nederlands'\n    }, //243 Google Chrome Windows newer name variants Dutch Female\n    {\n      name: 'Google polski'\n    }, //244 Google Chrome Windows newer name variants Polish Female\n    {\n      name: 'Google portuguÃªs do Brasil'\n    }, //245 Google Chrome Windows newer name variants Brazilian Portugese Female\n    {\n      name: 'Google Ñ€ÑƒÑÑÐºÐ¸Ð¹'\n    }, //246 Google Chrome Windows newer name variants Russian Female\n    {\n      name: 'Google à¤¹à¤¿à¤¨à¥à¤¦à¥€'\n    }, //247 Google Chrome Windows newer name variants Hindi Female\n    {\n      name: 'Google æ—¥æœ¬èªž'\n    }, //248 Google Chrome Windows newer name variants Japanese Female\n    {\n      name: 'Google æ™®é€šè¯ï¼ˆä¸­å›½å¤§é™†ï¼‰'\n    }, //249 Google Chrome Windows newer name variants Chinese Female\n    {\n      name: 'Google ç²¤èªžï¼ˆé¦™æ¸¯ï¼‰'\n    }, //250 Google Chrome Windows newer name variants Hong Kong Chinese Female\n    {\n      name: 'zh-HK',\n      rate: 0.25\n    }, //251 iOS\n    {\n      name: 'Fallback Chinese (Hong Kong) Female',\n      lang: 'zh-HK',\n      fallbackvoice: true,\n      service: 'g1'\n    }, //252 Chinese (Hong Kong) Female fallback\n    {\n      name: 'Google ç²¤èªžï¼ˆé¦™æ¸¯ï¼‰'\n    }, //253 Google Chrome Windows newer name variants Chinese Taiwan Female\n    {\n      name: 'zh-TW',\n      rate: 0.25\n    }, //254 iOS\n    {\n      name: 'Fallback Chinese (Taiwan) Female',\n      lang: 'zh-TW',\n      fallbackvoice: true,\n      service: 'g1'\n    }, //255 Chinese Taiwan Female fallback\n    {\n      name: 'Microsoft George Mobile - English (United Kingdom)',\n      lang: 'en-GB'\n    }, //256 Male\n    {\n      name: 'Microsoft Susan Mobile - English (United Kingdom)',\n      lang: 'en-GB'\n    }, //257 Female\n    {\n      name: 'Microsoft Hazel Mobile - English (United Kingdom)',\n      lang: 'en-GB'\n    }, //258 Female\n    {\n      name: 'Microsoft Heera Mobile - English (India)',\n      lang: 'en-In'\n    }, //259 Female\n    {\n      name: 'Microsoft Irina Mobile - Russian (Russia)',\n      lang: 'ru-RU'\n    }, //260 Female\n    {\n      name: 'Microsoft Hedda Mobile - German (Germany)',\n      lang: 'de-DE'\n    }, //261\n    {\n      name: 'Microsoft Katja Mobile - German (Germany)',\n      lang: 'de-DE'\n    }, //262\n    {\n      name: 'Microsoft Helena Mobile - Spanish (Spain)',\n      lang: 'es-ES'\n    }, //263\n    {\n      name: 'Microsoft Laura Mobile - Spanish (Spain)',\n      lang: 'es-ES'\n    }, //264\n    {\n      name: 'Microsoft Sabina Mobile - Spanish (Mexico)',\n      lang: 'es-MX'\n    }, //265 Female\n    {\n      name: 'Microsoft Julie Mobile - French (France)',\n      lang: 'fr-FR'\n    }, //266\n    {\n      name: 'Microsoft Paulina Mobile - Polish (Poland)',\n      lang: 'pl-PL'\n    }, //267 Female\n    {\n      name: 'Microsoft Huihui Mobile - Chinese (Simplified, PRC)',\n      lang: 'zh-CN'\n    }, //268\n    {\n      name: 'Microsoft Yaoyao Mobile - Chinese (Simplified, PRC)',\n      lang: 'zh-CN'\n    }, //269\n    {\n      name: 'Microsoft Tracy Mobile - Chinese (Traditional, Hong Kong S.A.R.)',\n      lang: 'zh-CN'\n    }, //270\n    {\n      name: 'Microsoft Elsa Mobile - Italian (Italy)',\n      lang: 'it-IT'\n    }, //271 Female\n    {\n      name: 'Microsoft Maria Mobile - Portuguese (Brazil)',\n      lang: 'pt-BR'\n    }, //272 Female\n    {\n      name: 'Microsoft Ayumi Mobile - Japanese (Japan)',\n      lang: 'ja-JP'\n    }, //273\n    {\n      name: 'Microsoft Haruka Mobile - Japanese (Japan)',\n      lang: 'ja-JP'\n    }, //274 Female\n    {\n      name: 'Helena',\n      lang: 'de-DE'\n    }, //275 iOS 10 Deutsch Female\n    {\n      name: 'Catherine',\n      lang: 'en-AU'\n    }, //276 iOS 10 English (AU) Female\n    {\n      name: 'Arthur',\n      lang: 'en-GB'\n    }, //277 iOS 10 English (UK) Male\n    {\n      name: 'Martha',\n      lang: 'en-GB'\n    }, //278 iOS 10 English (UK) Female\n    {\n      name: 'Marie',\n      lang: 'fr-FR'\n    }, //279 iOS 10 French Female\n    {\n      name: 'O-ren',\n      lang: 'ja-JP'\n    }, //280 iOS 10 Japanese Female\n    {\n      name: 'Yu-shu',\n      lang: 'zh-CN'\n    }, //281 iOS 10 Chinese Female\n    // Microsoft Edge 41.16275.1000.0\n    {\n      name: 'Microsoft David - English (United States)',\n      lang: 'en-US'\n    }, //282 like 234 Microsoft Edge David English Male\n    {\n      name: 'Microsoft Zira - English (United States)',\n      lang: 'en-US'\n    }, //283 like 235 Microsoft Edge Zira English Female\n    {\n      name: 'Microsoft Mark - English (United States)',\n      lang: 'en-US'\n    }, //284 like 236 Microsoft Edge Mark English Male\n    {\n      name: 'Microsoft George - English (United Kingdom)',\n      lang: 'en-GB'\n    }, //285 like 256 Male\n    {\n      name: 'Microsoft Susan - English (United Kingdom)',\n      lang: 'en-GB'\n    }, //286 like 257 Female\n    {\n      name: 'Microsoft Hazel - English (United Kingdom)',\n      lang: 'en-GB'\n    }, //287 like 258 Female\n    {\n      name: 'Microsoft Heera - English (India)',\n      lang: 'en-In'\n    }, //288 like 259 Female\n    {\n      name: 'Microsoft Irina - Russian (Russia)',\n      lang: 'ru-RU'\n    }, //289 like 260 Female\n    {\n      name: 'Microsoft Hedda - German (Germany)',\n      lang: 'de-DE'\n    }, //290 like 261\n    {\n      name: 'Microsoft Katja - German (Germany)',\n      lang: 'de-DE'\n    }, //291 like 262\n    {\n      name: 'Microsoft Helena - Spanish (Spain)',\n      lang: 'es-ES'\n    }, //292 like 263\n    {\n      name: 'Microsoft Laura - Spanish (Spain)',\n      lang: 'es-ES'\n    }, //293 like 264\n    {\n      name: 'Microsoft Sabina - Spanish (Mexico)',\n      lang: 'es-MX'\n    }, //294 like 265 Female\n    {\n      name: 'Microsoft Julie - French (France)',\n      lang: 'fr-FR'\n    }, //295 like 266 Female\n    {\n      name: 'Microsoft Paulina - Polish (Poland)',\n      lang: 'pl-PL'\n    }, //296 like 267 Female\n    {\n      name: 'Microsoft Huihui - Chinese (Simplified, PRC)',\n      lang: 'zh-CN'\n    }, //297 like 268\n    {\n      name: 'Microsoft Yaoyao - Chinese (Simplified, PRC)',\n      lang: 'zh-CN'\n    }, //298 like 269\n    {\n      name: 'Microsoft Tracy - Chinese (Traditional, Hong Kong S.A.R.)',\n      lang: 'zh-CN'\n    }, //299 like 270\n    {\n      name: 'Microsoft Elsa - Italian (Italy)',\n      lang: 'it-IT'\n    }, //300 like 271 Female\n    {\n      name: 'Microsoft Maria - Portuguese (Brazil)',\n      lang: 'pt-BR'\n    }, //301 like 272 Female\n    {\n      name: 'Microsoft Ayumi - Japanese (Japan)',\n      lang: 'ja-JP'\n    }, //302 like 273\n    {\n      name: 'Microsoft Haruka - Japanese (Japan)',\n      lang: 'ja-JP'\n    }, //303 like 274 Female\n    {\n      name: 'Microsoft Hortense - French (France)',\n      lang: 'fr-FR'\n    }, //304 Female like 266\n    {\n      name: 'Microsoft Hanhan - Chinese (Traditional, Taiwan)',\n      lang: 'zh-TW'\n    }, //305 Female\n    {\n      name: 'Microsoft Heami - Korean (Korean)',\n      lang: 'ko-KR'\n    }, //306 like 218 Female\n    {\n      name: 'Microsoft Stefan - German (Germany)',\n      lang: 'de-DE'\n    }, //307 Male ** NOT USED\n    {\n      name: 'Microsoft Ravi - English (India)',\n      lang: 'en-IN'\n    }, //308 Male ** NOT USED\n    {\n      name: 'Microsoft Pablo - Spanish (Spain)',\n      lang: 'es-ES'\n    }, //309 Male ** NOT USED\n    {\n      name: 'Microsoft Raul - Spanish (Mexico)',\n      lang: 'es-MX'\n    }, //310 Male ** NOT USED\n    {\n      name: 'Microsoft Paul - French (France)',\n      lang: 'fr-FR'\n    }, //311 Male ** NOT USED\n    {\n      name: 'Microsoft Cosimo - Italian (Italy)',\n      lang: 'it-IT'\n    }, //312 Male ** NOT USED\n    {\n      name: 'Microsoft Ichiro - Japanese (Japan)',\n      lang: 'ja-JP'\n    }, //313 Male ** NOT USED\n    {\n      name: 'Microsoft Adam - Polish (Poland)',\n      lang: 'pl-PL'\n    }, //314 Male ** NOT USED\n    {\n      name: 'Microsoft Daniel - Portuguese (Brazil)',\n      lang: 'pt-BR'\n    }, //315 Male ** NOT USED\n    {\n      name: 'Microsoft Pavel - Russian (Russia)',\n      lang: 'ru-RU'\n    }, //316 Male ** NOT USED\n    {\n      name: 'Microsoft Kangkang - Chinese (Simplified, PRC)',\n      lang: 'zh-CN'\n    }, //317 Male ** NOT USED\n    {\n      name: 'Microsoft Danny - Chinese (Traditional, Hong Kong S.A.R.)',\n      lang: 'zh-HK'\n    }, //318 Male ** NOT USED\n    {\n      name: 'Microsoft Yating - Chinese (Traditional, Taiwan)',\n      lang: 'zh-TW'\n    }, //319 Female\n    {\n      name: 'Microsoft Zhiwei - Chinese (Traditional, Taiwan)',\n      lang: 'zh-TW'\n    }, //320 Male ** NOT USED\n    // Microsoft new Mobile\n    {\n      name: 'Microsoft Hortense Mobile - French (France)',\n      lang: 'fr-FR'\n    }, //321 like 304 Female\n    {\n      name: 'Microsoft Hanhan Mobile - Chinese (Traditional, Taiwan)',\n      lang: 'zh-TW'\n    }, //322 like 305 Female\n    {\n      name: 'Microsoft Heami Mobile - Korean (Korean)',\n      lang: 'ko-KR'\n    }, //323 like 306 Female\n    {\n      name: 'Microsoft Stefan Mobile - German (Germany)',\n      lang: 'de-DE'\n    }, //324 like 307 Male ** NOT USED\n    {\n      name: 'Microsoft Ravi Mobile - English (India)',\n      lang: 'en-IN'\n    }, //325 like 308 Male ** NOT USED\n    {\n      name: 'Microsoft Pablo Mobile - Spanish (Spain)',\n      lang: 'es-ES'\n    }, //326 like 309 Male ** NOT USED\n    {\n      name: 'Microsoft Raul Mobile - Spanish (Mexico)',\n      lang: 'es-MX'\n    }, //327 like 310 Male ** NOT USED\n    {\n      name: 'Microsoft Paul Mobile - French (France)',\n      lang: 'fr-FR'\n    }, //328 like 311 Male ** NOT USED\n    {\n      name: 'Microsoft Cosimo Mobile - Italian (Italy)',\n      lang: 'it-IT'\n    }, //329 like 312 Male ** NOT USED\n    {\n      name: 'Microsoft Ichiro Mobile - Japanese (Japan)',\n      lang: 'ja-JP'\n    }, //330 like 313 Male ** NOT USED\n    {\n      name: 'Microsoft Adam Mobile - Polish (Poland)',\n      lang: 'pl-PL'\n    }, //331 like 314 Male ** NOT USED\n    {\n      name: 'Microsoft Daniel Mobile - Portuguese (Brazil)',\n      lang: 'pt-BR'\n    }, //332 like 315 Male ** NOT USED\n    {\n      name: 'Microsoft Pavel Mobile - Russian (Russia)',\n      lang: 'ru-RU'\n    }, //333 like 316 Male ** NOT USED\n    {\n      name: 'Microsoft Kangkang Mobile - Chinese (Simplified, PRC)',\n      lang: 'zh-CN'\n    }, //334 like 317 Male ** NOT USED\n    {\n      name: 'Microsoft Danny Mobile - Chinese (Traditional, Hong Kong S.A.R.)',\n      lang: 'zh-HK'\n    }, //335 like 318 Male ** NOT USED\n    {\n      name: 'Microsoft Yating Mobile - Chinese (Traditional, Taiwan)',\n      lang: 'zh-TW'\n    }, //336 like 319 Female\n    {\n      name: 'Microsoft Zhiwei Mobile - Chinese (Traditional, Taiwan)',\n      lang: 'zh-TW'\n    }, //337 like 320 Male ** NOT USED\n    // Microsoft available in Chrome with Desktop string\n    {\n      name: 'Microsoft David Desktop - English (United States)',\n      lang: 'en-US'\n    }, //338 like 282, 234 Microsoft Edge David English Male\n    {\n      name: 'Microsoft Zira Desktop - English (United States)',\n      lang: 'en-US'\n    }, //339 like 283, 235 Microsoft Edge Zira English Female\n    {\n      name: 'Microsoft Mark Desktop - English (United States)',\n      lang: 'en-US'\n    }, //340 like 284, 236 Microsoft Edge Mark English Male\n    {\n      name: 'Microsoft George Desktop - English (United Kingdom)',\n      lang: 'en-GB'\n    }, //341 like 285, 256 Male\n    {\n      name: 'Microsoft Susan Desktop - English (United Kingdom)',\n      lang: 'en-GB'\n    }, //342 like 286, 257 Female\n    {\n      name: 'Microsoft Hazel Desktop - English (United Kingdom)',\n      lang: 'en-GB'\n    }, //343 like 287, 258 Female\n    {\n      name: 'Microsoft Heera Desktop - English (India)',\n      lang: 'en-In'\n    }, //344 like 288, 259 Female\n    {\n      name: 'Microsoft Irina Desktop - Russian (Russia)',\n      lang: 'ru-RU'\n    }, //345 like 289, 260 Female\n    {\n      name: 'Microsoft Hedda Desktop - German (Germany)',\n      lang: 'de-DE'\n    }, //346 like 290, 261\n    {\n      name: 'Microsoft Katja Desktop - German (Germany)',\n      lang: 'de-DE'\n    }, //347 like 291, 262\n    {\n      name: 'Microsoft Helena Desktop - Spanish (Spain)',\n      lang: 'es-ES'\n    }, //348 like 292, 263\n    {\n      name: 'Microsoft Laura Desktop - Spanish (Spain)',\n      lang: 'es-ES'\n    }, //349 like 293, 264\n    {\n      name: 'Microsoft Sabina Desktop - Spanish (Mexico)',\n      lang: 'es-MX'\n    }, //350 like 294, 265 Female\n    {\n      name: 'Microsoft Julie Desktop - French (France)',\n      lang: 'fr-FR'\n    }, //351 like 295, 266\n    {\n      name: 'Microsoft Paulina Desktop - Polish (Poland)',\n      lang: 'pl-PL'\n    }, //352 like 296, 267 Female\n    {\n      name: 'Microsoft Huihui Desktop - Chinese (Simplified, PRC)',\n      lang: 'zh-CN'\n    }, //353 like 297, 268\n    {\n      name: 'Microsoft Yaoyao Desktop - Chinese (Simplified, PRC)',\n      lang: 'zh-CN'\n    }, //354 like 298, 269\n    {\n      name: 'Microsoft Tracy Desktop - Chinese (Traditional, Hong Kong S.A.R.)',\n      lang: 'zh-CN'\n    }, //355 like 299, 270\n    {\n      name: 'Microsoft Elsa Desktop - Italian (Italy)',\n      lang: 'it-IT'\n    }, //356 like 300, 271 Female\n    {\n      name: 'Microsoft Maria Desktop - Portuguese (Brazil)',\n      lang: 'pt-BR'\n    }, //357 like 301, 272 Female\n    {\n      name: 'Microsoft Ayumi Desktop - Japanese (Japan)',\n      lang: 'ja-JP'\n    }, //358 like 302, 273\n    {\n      name: 'Microsoft Haruka Desktop - Japanese (Japan)',\n      lang: 'ja-JP'\n    }, //359 like 303, 274 Female\n    {\n      name: 'Microsoft Hortense Desktop - French (France)',\n      lang: 'fr-FR'\n    }, //360 like 304 Female\n    {\n      name: 'Microsoft Hanhan Desktop - Chinese (Traditional, Taiwan)',\n      lang: 'zh-TW'\n    }, //361 like 322, 305Female\n    {\n      name: 'Microsoft Heami Desktop - Korean (Korean)',\n      lang: 'ko-KR'\n    }, //362 like 323, 306 Female\n    {\n      name: 'Microsoft Stefan Desktop - German (Germany)',\n      lang: 'de-DE'\n    }, //363 like 324, 307 Male ** NOT USED\n    {\n      name: 'Microsoft Ravi Desktop - English (India)',\n      lang: 'en-IN'\n    }, //364 like 325, 308 Male ** NOT USED\n    {\n      name: 'Microsoft Pablo Desktop - Spanish (Spain)',\n      lang: 'es-ES'\n    }, //365 like 326, 309 Male ** NOT USED\n    {\n      name: 'Microsoft Raul Desktop - Spanish (Mexico)',\n      lang: 'es-MX'\n    }, //366 like 327, 310 Male ** NOT USED\n    {\n      name: 'Microsoft Paul Desktop - French (France)',\n      lang: 'fr-FR'\n    }, //367 like 328, 311 Male ** NOT USED\n    {\n      name: 'Microsoft Cosimo Desktop - Italian (Italy)',\n      lang: 'it-IT'\n    }, //368 like 239, 312 Male ** NOT USED\n    {\n      name: 'Microsoft Ichiro Desktop - Japanese (Japan)',\n      lang: 'ja-JP'\n    }, //369 like 330, 313 Male ** NOT USED\n    {\n      name: 'Microsoft Adam Desktop - Polish (Poland)',\n      lang: 'pl-PL'\n    }, //370 like 331, 314 Male ** NOT USED\n    {\n      name: 'Microsoft Daniel Desktop - Portuguese (Brazil)',\n      lang: 'pt-BR'\n    }, //371 like 332, 315 Male ** NOT USED\n    {\n      name: 'Microsoft Pavel Desktop - Russian (Russia)',\n      lang: 'ru-RU'\n    }, //372 like 333, 316 Male ** NOT USED\n    {\n      name: 'Microsoft Kangkang Desktop - Chinese (Simplified, PRC)',\n      lang: 'zh-CN'\n    }, //373 like 334, 317 Male ** NOT USED\n    {\n      name: 'Microsoft Danny Desktop - Chinese (Traditional, Hong Kong S.A.R.)',\n      lang: 'zh-HK'\n    }, //374 like 335, 318 Male ** NOT USED\n    {\n      name: 'Microsoft Yating Desktop - Chinese (Traditional, Taiwan)',\n      lang: 'zh-TW'\n    }, //375 like 336, 319 Female\n    {\n      name: 'Microsoft Zhiwei Desktop - Chinese (Traditional, Taiwan)',\n      lang: 'zh-TW' //376 like 337, 320 Male ** NOT USED\n\n    }];\n    self.iOS = /(iPad|iPhone|iPod)/g.test(navigator.userAgent);\n    self.iOS9 = /(iphone|ipod|ipad).* os 9_/.test(navigator.userAgent.toLowerCase());\n    self.iOS10 = /(iphone|ipod|ipad).* os 10_/.test(navigator.userAgent.toLowerCase());\n    self.iOS9plus = /(iphone|ipod|ipad).* os 10_/.test(navigator.userAgent.toLowerCase()) || /(iphone|ipod|ipad).* os 10_/.test(navigator.userAgent.toLowerCase());\n    self.is_chrome = navigator.userAgent.indexOf('Chrome') > -1;\n    self.is_safari = navigator.userAgent.indexOf(\"Safari\") > -1;\n\n    if (self.is_chrome && self.is_safari) {\n      self.is_safari = false;\n    }\n\n    self.is_opera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n    self.is_android = navigator.userAgent.toLowerCase().indexOf(\"android\") > -1;\n    self.iOS_initialized = false;\n    self.iOS9_initialized = false;\n    self.iOS10_initialized = false; //Fallback cache voices\n\n    self.cache_ios_voices = [{\n      \"name\": \"he-IL\",\n      \"voiceURI\": \"he-IL\",\n      \"lang\": \"he-IL\"\n    }, {\n      \"name\": \"th-TH\",\n      \"voiceURI\": \"th-TH\",\n      \"lang\": \"th-TH\"\n    }, {\n      \"name\": \"pt-BR\",\n      \"voiceURI\": \"pt-BR\",\n      \"lang\": \"pt-BR\"\n    }, {\n      \"name\": \"sk-SK\",\n      \"voiceURI\": \"sk-SK\",\n      \"lang\": \"sk-SK\"\n    }, {\n      \"name\": \"fr-CA\",\n      \"voiceURI\": \"fr-CA\",\n      \"lang\": \"fr-CA\"\n    }, {\n      \"name\": \"ro-RO\",\n      \"voiceURI\": \"ro-RO\",\n      \"lang\": \"ro-RO\"\n    }, {\n      \"name\": \"no-NO\",\n      \"voiceURI\": \"no-NO\",\n      \"lang\": \"no-NO\"\n    }, {\n      \"name\": \"fi-FI\",\n      \"voiceURI\": \"fi-FI\",\n      \"lang\": \"fi-FI\"\n    }, {\n      \"name\": \"pl-PL\",\n      \"voiceURI\": \"pl-PL\",\n      \"lang\": \"pl-PL\"\n    }, {\n      \"name\": \"de-DE\",\n      \"voiceURI\": \"de-DE\",\n      \"lang\": \"de-DE\"\n    }, {\n      \"name\": \"nl-NL\",\n      \"voiceURI\": \"nl-NL\",\n      \"lang\": \"nl-NL\"\n    }, {\n      \"name\": \"id-ID\",\n      \"voiceURI\": \"id-ID\",\n      \"lang\": \"id-ID\"\n    }, {\n      \"name\": \"tr-TR\",\n      \"voiceURI\": \"tr-TR\",\n      \"lang\": \"tr-TR\"\n    }, {\n      \"name\": \"it-IT\",\n      \"voiceURI\": \"it-IT\",\n      \"lang\": \"it-IT\"\n    }, {\n      \"name\": \"pt-PT\",\n      \"voiceURI\": \"pt-PT\",\n      \"lang\": \"pt-PT\"\n    }, {\n      \"name\": \"fr-FR\",\n      \"voiceURI\": \"fr-FR\",\n      \"lang\": \"fr-FR\"\n    }, {\n      \"name\": \"ru-RU\",\n      \"voiceURI\": \"ru-RU\",\n      \"lang\": \"ru-RU\"\n    }, {\n      \"name\": \"es-MX\",\n      \"voiceURI\": \"es-MX\",\n      \"lang\": \"es-MX\"\n    }, {\n      \"name\": \"zh-HK\",\n      \"voiceURI\": \"zh-HK\",\n      \"lang\": \"zh-HK\"\n    }, {\n      \"name\": \"sv-SE\",\n      \"voiceURI\": \"sv-SE\",\n      \"lang\": \"sv-SE\"\n    }, {\n      \"name\": \"hu-HU\",\n      \"voiceURI\": \"hu-HU\",\n      \"lang\": \"hu-HU\"\n    }, {\n      \"name\": \"zh-TW\",\n      \"voiceURI\": \"zh-TW\",\n      \"lang\": \"zh-TW\"\n    }, {\n      \"name\": \"es-ES\",\n      \"voiceURI\": \"es-ES\",\n      \"lang\": \"es-ES\"\n    }, {\n      \"name\": \"zh-CN\",\n      \"voiceURI\": \"zh-CN\",\n      \"lang\": \"zh-CN\"\n    }, {\n      \"name\": \"nl-BE\",\n      \"voiceURI\": \"nl-BE\",\n      \"lang\": \"nl-BE\"\n    }, {\n      \"name\": \"en-GB\",\n      \"voiceURI\": \"en-GB\",\n      \"lang\": \"en-GB\"\n    }, {\n      \"name\": \"ar-SA\",\n      \"voiceURI\": \"ar-SA\",\n      \"lang\": \"ar-SA\"\n    }, {\n      \"name\": \"ko-KR\",\n      \"voiceURI\": \"ko-KR\",\n      \"lang\": \"ko-KR\"\n    }, {\n      \"name\": \"cs-CZ\",\n      \"voiceURI\": \"cs-CZ\",\n      \"lang\": \"cs-CZ\"\n    }, {\n      \"name\": \"en-ZA\",\n      \"voiceURI\": \"en-ZA\",\n      \"lang\": \"en-ZA\"\n    }, {\n      \"name\": \"en-AU\",\n      \"voiceURI\": \"en-AU\",\n      \"lang\": \"en-AU\"\n    }, {\n      \"name\": \"da-DK\",\n      \"voiceURI\": \"da-DK\",\n      \"lang\": \"da-DK\"\n    }, {\n      \"name\": \"en-US\",\n      \"voiceURI\": \"en-US\",\n      \"lang\": \"en-US\"\n    }, {\n      \"name\": \"en-IE\",\n      \"voiceURI\": \"en-IE\",\n      \"lang\": \"en-IE\"\n    }, {\n      \"name\": \"hi-IN\",\n      \"voiceURI\": \"hi-IN\",\n      \"lang\": \"hi-IN\"\n    }, {\n      \"name\": \"el-GR\",\n      \"voiceURI\": \"el-GR\",\n      \"lang\": \"el-GR\"\n    }, {\n      \"name\": \"ja-JP\",\n      \"voiceURI\": \"ja-JP\",\n      \"lang\": \"ja-JP\"\n    }];\n    self.cache_ios9_voices = [{\n      name: \"Maged\",\n      voiceURI: \"com.apple.ttsbundle.Maged-compact\",\n      lang: \"ar-SA\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Zuzana\",\n      voiceURI: \"com.apple.ttsbundle.Zuzana-compact\",\n      lang: \"cs-CZ\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Sara\",\n      voiceURI: \"com.apple.ttsbundle.Sara-compact\",\n      lang: \"da-DK\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Anna\",\n      voiceURI: \"com.apple.ttsbundle.Anna-compact\",\n      lang: \"de-DE\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Melina\",\n      voiceURI: \"com.apple.ttsbundle.Melina-compact\",\n      lang: \"el-GR\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Karen\",\n      voiceURI: \"com.apple.ttsbundle.Karen-compact\",\n      lang: \"en-AU\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Daniel\",\n      voiceURI: \"com.apple.ttsbundle.Daniel-compact\",\n      lang: \"en-GB\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Moira\",\n      voiceURI: \"com.apple.ttsbundle.Moira-compact\",\n      lang: \"en-IE\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Samantha (Enhanced)\",\n      voiceURI: \"com.apple.ttsbundle.Samantha-premium\",\n      lang: \"en-US\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Samantha\",\n      voiceURI: \"com.apple.ttsbundle.Samantha-compact\",\n      lang: \"en-US\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Tessa\",\n      voiceURI: \"com.apple.ttsbundle.Tessa-compact\",\n      lang: \"en-ZA\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Monica\",\n      voiceURI: \"com.apple.ttsbundle.Monica-compact\",\n      lang: \"es-ES\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Paulina\",\n      voiceURI: \"com.apple.ttsbundle.Paulina-compact\",\n      lang: \"es-MX\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Satu\",\n      voiceURI: \"com.apple.ttsbundle.Satu-compact\",\n      lang: \"fi-FI\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Amelie\",\n      voiceURI: \"com.apple.ttsbundle.Amelie-compact\",\n      lang: \"fr-CA\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Thomas\",\n      voiceURI: \"com.apple.ttsbundle.Thomas-compact\",\n      lang: \"fr-FR\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Carmit\",\n      voiceURI: \"com.apple.ttsbundle.Carmit-compact\",\n      lang: \"he-IL\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Lekha\",\n      voiceURI: \"com.apple.ttsbundle.Lekha-compact\",\n      lang: \"hi-IN\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Mariska\",\n      voiceURI: \"com.apple.ttsbundle.Mariska-compact\",\n      lang: \"hu-HU\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Damayanti\",\n      voiceURI: \"com.apple.ttsbundle.Damayanti-compact\",\n      lang: \"id-ID\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Alice\",\n      voiceURI: \"com.apple.ttsbundle.Alice-compact\",\n      lang: \"it-IT\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Kyoko\",\n      voiceURI: \"com.apple.ttsbundle.Kyoko-compact\",\n      lang: \"ja-JP\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Yuna\",\n      voiceURI: \"com.apple.ttsbundle.Yuna-compact\",\n      lang: \"ko-KR\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Ellen\",\n      voiceURI: \"com.apple.ttsbundle.Ellen-compact\",\n      lang: \"nl-BE\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Xander\",\n      voiceURI: \"com.apple.ttsbundle.Xander-compact\",\n      lang: \"nl-NL\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Nora\",\n      voiceURI: \"com.apple.ttsbundle.Nora-compact\",\n      lang: \"no-NO\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Zosia\",\n      voiceURI: \"com.apple.ttsbundle.Zosia-compact\",\n      lang: \"pl-PL\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Luciana\",\n      voiceURI: \"com.apple.ttsbundle.Luciana-compact\",\n      lang: \"pt-BR\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Joana\",\n      voiceURI: \"com.apple.ttsbundle.Joana-compact\",\n      lang: \"pt-PT\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Ioana\",\n      voiceURI: \"com.apple.ttsbundle.Ioana-compact\",\n      lang: \"ro-RO\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Milena\",\n      voiceURI: \"com.apple.ttsbundle.Milena-compact\",\n      lang: \"ru-RU\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Laura\",\n      voiceURI: \"com.apple.ttsbundle.Laura-compact\",\n      lang: \"sk-SK\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Alva\",\n      voiceURI: \"com.apple.ttsbundle.Alva-compact\",\n      lang: \"sv-SE\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Kanya\",\n      voiceURI: \"com.apple.ttsbundle.Kanya-compact\",\n      lang: \"th-TH\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Yelda\",\n      voiceURI: \"com.apple.ttsbundle.Yelda-compact\",\n      lang: \"tr-TR\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Ting-Ting\",\n      voiceURI: \"com.apple.ttsbundle.Ting-Ting-compact\",\n      lang: \"zh-CN\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Sin-Ji\",\n      voiceURI: \"com.apple.ttsbundle.Sin-Ji-compact\",\n      lang: \"zh-HK\",\n      localService: !0,\n      \"default\": !0\n    }, {\n      name: \"Mei-Jia\",\n      voiceURI: \"com.apple.ttsbundle.Mei-Jia-compact\",\n      lang: \"zh-TW\",\n      localService: !0,\n      \"default\": !0\n    }];\n    self.cache_ios10_voices = [{\n      \"name\": \"Maged\",\n      \"voiceURI\": \"com.apple.ttsbundle.Maged-compact\",\n      \"lang\": \"ar-SA\"\n    }, {\n      \"name\": \"Zuzana\",\n      \"voiceURI\": \"com.apple.ttsbundle.Zuzana-compact\",\n      \"lang\": \"cs-CZ\"\n    }, {\n      \"name\": \"Sara\",\n      \"voiceURI\": \"com.apple.ttsbundle.Sara-compact\",\n      \"lang\": \"da-DK\"\n    }, {\n      \"name\": \"Anna\",\n      \"voiceURI\": \"com.apple.ttsbundle.Anna-compact\",\n      \"lang\": \"de-DE\"\n    }, {\n      \"name\": \"Helena\",\n      \"voiceURI\": \"com.apple.ttsbundle.siri_female_de-DE_compact\",\n      \"lang\": \"de-DE\"\n    }, {\n      \"name\": \"Martin\",\n      \"voiceURI\": \"com.apple.ttsbundle.siri_male_de-DE_compact\",\n      \"lang\": \"de-DE\"\n    }, {\n      \"name\": \"Nikos (Enhanced)\",\n      \"voiceURI\": \"com.apple.ttsbundle.Nikos-premium\",\n      \"lang\": \"el-GR\"\n    }, {\n      \"name\": \"Melina\",\n      \"voiceURI\": \"com.apple.ttsbundle.Melina-compact\",\n      \"lang\": \"el-GR\"\n    }, {\n      \"name\": \"Nikos\",\n      \"voiceURI\": \"com.apple.ttsbundle.Nikos-compact\",\n      \"lang\": \"el-GR\"\n    }, {\n      \"name\": \"Catherine\",\n      \"voiceURI\": \"com.apple.ttsbundle.siri_female_en-AU_compact\",\n      \"lang\": \"en-AU\"\n    }, {\n      \"name\": \"Gordon\",\n      \"voiceURI\": \"com.apple.ttsbundle.siri_male_en-AU_compact\",\n      \"lang\": \"en-AU\"\n    }, {\n      \"name\": \"Karen\",\n      \"voiceURI\": \"com.apple.ttsbundle.Karen-compact\",\n      \"lang\": \"en-AU\"\n    }, {\n      \"name\": \"Daniel (Enhanced)\",\n      \"voiceURI\": \"com.apple.ttsbundle.Daniel-premium\",\n      \"lang\": \"en-GB\"\n    }, {\n      \"name\": \"Arthur\",\n      \"voiceURI\": \"com.apple.ttsbundle.siri_male_en-GB_compact\",\n      \"lang\": \"en-GB\"\n    }, {\n      \"name\": \"Daniel\",\n      \"voiceURI\": \"com.apple.ttsbundle.Daniel-compact\",\n      \"lang\": \"en-GB\"\n    }, {\n      \"name\": \"Martha\",\n      \"voiceURI\": \"com.apple.ttsbundle.siri_female_en-GB_compact\",\n      \"lang\": \"en-GB\"\n    }, {\n      \"name\": \"Moira\",\n      \"voiceURI\": \"com.apple.ttsbundle.Moira-compact\",\n      \"lang\": \"en-IE\"\n    }, {\n      \"name\": \"Nicky (Enhanced)\",\n      \"voiceURI\": \"com.apple.ttsbundle.siri_female_en-US_premium\",\n      \"lang\": \"en-US\"\n    }, {\n      \"name\": \"Samantha (Enhanced)\",\n      \"voiceURI\": \"com.apple.ttsbundle.Samantha-premium\",\n      \"lang\": \"en-US\"\n    }, {\n      \"name\": \"Aaron\",\n      \"voiceURI\": \"com.apple.ttsbundle.siri_male_en-US_compact\",\n      \"lang\": \"en-US\"\n    }, {\n      \"name\": \"Fred\",\n      \"voiceURI\": \"com.apple.speech.synthesis.voice.Fred\",\n      \"lang\": \"en-US\"\n    }, {\n      \"name\": \"Nicky\",\n      \"voiceURI\": \"com.apple.ttsbundle.siri_female_en-US_compact\",\n      \"lang\": \"en-US\"\n    }, {\n      \"name\": \"Samantha\",\n      \"voiceURI\": \"com.apple.ttsbundle.Samantha-compact\",\n      \"lang\": \"en-US\"\n    }, {\n      \"name\": \"Tessa\",\n      \"voiceURI\": \"com.apple.ttsbundle.Tessa-compact\",\n      \"lang\": \"en-ZA\"\n    }, {\n      \"name\": \"Monica\",\n      \"voiceURI\": \"com.apple.ttsbundle.Monica-compact\",\n      \"lang\": \"es-ES\"\n    }, {\n      \"name\": \"Paulina\",\n      \"voiceURI\": \"com.apple.ttsbundle.Paulina-compact\",\n      \"lang\": \"es-MX\"\n    }, {\n      \"name\": \"Satu\",\n      \"voiceURI\": \"com.apple.ttsbundle.Satu-compact\",\n      \"lang\": \"fi-FI\"\n    }, {\n      \"name\": \"Amelie\",\n      \"voiceURI\": \"com.apple.ttsbundle.Amelie-compact\",\n      \"lang\": \"fr-CA\"\n    }, {\n      \"name\": \"Daniel\",\n      \"voiceURI\": \"com.apple.ttsbundle.siri_male_fr-FR_compact\",\n      \"lang\": \"fr-FR\"\n    }, {\n      \"name\": \"Marie\",\n      \"voiceURI\": \"com.apple.ttsbundle.siri_female_fr-FR_compact\",\n      \"lang\": \"fr-FR\"\n    }, {\n      \"name\": \"Thomas\",\n      \"voiceURI\": \"com.apple.ttsbundle.Thomas-compact\",\n      \"lang\": \"fr-FR\"\n    }, {\n      \"name\": \"Carmit\",\n      \"voiceURI\": \"com.apple.ttsbundle.Carmit-compact\",\n      \"lang\": \"he-IL\"\n    }, {\n      \"name\": \"Lekha\",\n      \"voiceURI\": \"com.apple.ttsbundle.Lekha-compact\",\n      \"lang\": \"hi-IN\"\n    }, {\n      \"name\": \"Mariska\",\n      \"voiceURI\": \"com.apple.ttsbundle.Mariska-compact\",\n      \"lang\": \"hu-HU\"\n    }, {\n      \"name\": \"Damayanti\",\n      \"voiceURI\": \"com.apple.ttsbundle.Damayanti-compact\",\n      \"lang\": \"id-ID\"\n    }, {\n      \"name\": \"Alice\",\n      \"voiceURI\": \"com.apple.ttsbundle.Alice-compact\",\n      \"lang\": \"it-IT\"\n    }, {\n      \"name\": \"Hattori\",\n      \"voiceURI\": \"com.apple.ttsbundle.siri_male_ja-JP_compact\",\n      \"lang\": \"ja-JP\"\n    }, {\n      \"name\": \"Kyoko\",\n      \"voiceURI\": \"com.apple.ttsbundle.Kyoko-compact\",\n      \"lang\": \"ja-JP\"\n    }, {\n      \"name\": \"O-ren\",\n      \"voiceURI\": \"com.apple.ttsbundle.siri_female_ja-JP_compact\",\n      \"lang\": \"ja-JP\"\n    }, {\n      \"name\": \"Yuna\",\n      \"voiceURI\": \"com.apple.ttsbundle.Yuna-compact\",\n      \"lang\": \"ko-KR\"\n    }, {\n      \"name\": \"Ellen\",\n      \"voiceURI\": \"com.apple.ttsbundle.Ellen-compact\",\n      \"lang\": \"nl-BE\"\n    }, {\n      \"name\": \"Xander\",\n      \"voiceURI\": \"com.apple.ttsbundle.Xander-compact\",\n      \"lang\": \"nl-NL\"\n    }, {\n      \"name\": \"Nora\",\n      \"voiceURI\": \"com.apple.ttsbundle.Nora-compact\",\n      \"lang\": \"no-NO\"\n    }, {\n      \"name\": \"Zosia\",\n      \"voiceURI\": \"com.apple.ttsbundle.Zosia-compact\",\n      \"lang\": \"pl-PL\"\n    }, {\n      \"name\": \"Luciana\",\n      \"voiceURI\": \"com.apple.ttsbundle.Luciana-compact\",\n      \"lang\": \"pt-BR\"\n    }, {\n      \"name\": \"Joana\",\n      \"voiceURI\": \"com.apple.ttsbundle.Joana-compact\",\n      \"lang\": \"pt-PT\"\n    }, {\n      \"name\": \"Ioana\",\n      \"voiceURI\": \"com.apple.ttsbundle.Ioana-compact\",\n      \"lang\": \"ro-RO\"\n    }, {\n      \"name\": \"Milena\",\n      \"voiceURI\": \"com.apple.ttsbundle.Milena-compact\",\n      \"lang\": \"ru-RU\"\n    }, {\n      \"name\": \"Laura\",\n      \"voiceURI\": \"com.apple.ttsbundle.Laura-compact\",\n      \"lang\": \"sk-SK\"\n    }, {\n      \"name\": \"Alva\",\n      \"voiceURI\": \"com.apple.ttsbundle.Alva-compact\",\n      \"lang\": \"sv-SE\"\n    }, {\n      \"name\": \"Kanya\",\n      \"voiceURI\": \"com.apple.ttsbundle.Kanya-compact\",\n      \"lang\": \"th-TH\"\n    }, {\n      \"name\": \"Yelda\",\n      \"voiceURI\": \"com.apple.ttsbundle.Yelda-compact\",\n      \"lang\": \"tr-TR\"\n    }, {\n      \"name\": \"Li-mu\",\n      \"voiceURI\": \"com.apple.ttsbundle.siri_male_zh-CN_compact\",\n      \"lang\": \"zh-CN\"\n    }, {\n      \"name\": \"Ting-Ting\",\n      \"voiceURI\": \"com.apple.ttsbundle.Ting-Ting-compact\",\n      \"lang\": \"zh-CN\"\n    }, {\n      \"name\": \"Yu-shu\",\n      \"voiceURI\": \"com.apple.ttsbundle.siri_female_zh-CN_compact\",\n      \"lang\": \"zh-CN\"\n    }, {\n      \"name\": \"Sin-Ji\",\n      \"voiceURI\": \"com.apple.ttsbundle.Sin-Ji-compact\",\n      \"lang\": \"zh-HK\"\n    }, {\n      \"name\": \"Mei-Jia\",\n      \"voiceURI\": \"com.apple.ttsbundle.Mei-Jia-compact\",\n      \"lang\": \"zh-TW\"\n    }];\n    self.systemvoices = null;\n    self.CHARACTER_LIMIT = 100;\n    self.VOICESUPPORT_ATTEMPTLIMIT = 5;\n    self.voicesupport_attempts = 0;\n    self.fallbackMode = false;\n    self.WORDS_PER_MINUTE = 130;\n    self.fallback_audio = null;\n    self.fallback_playbackrate = 1;\n    self.def_fallback_playbackrate = self.fallback_playbackrate;\n    self.fallback_audiopool = [];\n    self.msgparameters = null;\n    self.timeoutId = null;\n    self.OnLoad_callbacks = [];\n    self.useTimer = false;\n    self.utterances = [];\n    self.userInteractionEvents = [\"mousedown\", \"mouseup\", \"mousewheel\", \"keydown\"];\n    self.fallbackBufferLength = 5;\n\n    self.tstCompiled = function (xy) {\n      xy = 0;\n      return eval(\"typeof x\" + \"y === 'undefined'\");\n    };\n\n    self.fallbackServicePath = 'https://code.responsivevoice.org/' + (self.tstCompiled() ? '' : 'develop/') + 'getvoice.php'; //onvoiceschanged Deprecated: Only works on chrome and introduces glitches.\n\n    /*\n    //Wait until system voices are ready and trigger the event OnVoiceReady\n    if (typeof speechSynthesis != 'undefined') {\n        speechSynthesis.onvoiceschanged = function () {\n             self.systemvoices = window.speechSynthesis.getVoices();\n            console.log(\"OnVoiceReady - from onvoiceschanged\");\n           // console.log(self.OnVoiceReady);\n            if (self.OnVoiceReady != null) {\n                self.OnVoiceReady.call();\n            }\n          };\n    }*/\n\n    self.default_rv = self.responsivevoices[0];\n    self.debug = false;\n    self.rvsMapped = false;\n    self.forcedFallbackMode = false;\n    self.speechAllowedByUser = true; //self.OnVoiceReady = null; // OnVoiceReady is meant to be defined externally\n\n    self.log = function (log) {\n      if (self.debug) {\n        console.log(log);\n      }\n    };\n\n    self.init = function () {\n      //Disable RV on IOS temporally\n\n      /*if (self.iOS) {\n          self.enableFallbackMode();\n          return;\n      }*/\n      //Force using timers on Android\n      if (self.is_android) self.useTimer = true; //Force Opera to fallback mode\n\n      if (self.is_opera || typeof speechSynthesis === 'undefined') {\n        //Needs to be output\n        console.log('RV: Voice synthesis not supported');\n        self.enableFallbackMode();\n      } else {\n        //Waiting a few ms before calling getVoices() fixes some issues with safari on IOS as well as Chrome\n        setTimeout(function () {\n          var gsvinterval = setInterval(function () {\n            var v = window.speechSynthesis.getVoices();\n\n            if (v.length == 0 && (self.systemvoices == null || self.systemvoices.length == 0)) {\n              //Needs to be output\n              console.log('Voice support NOT ready');\n              self.voicesupport_attempts++;\n\n              if (self.voicesupport_attempts > self.VOICESUPPORT_ATTEMPTLIMIT) {\n                clearInterval(gsvinterval); //On IOS, sometimes getVoices is just empty, but speech works. So we use a cached voice collection.\n\n                if (window.speechSynthesis != null) {\n                  if (self.iOS) {\n                    //Determine iOS version:\n                    if (self.iOS10) {\n                      //iOS 10\n                      self.systemVoicesReady(self.cache_ios10_voices);\n                    } else if (self.iOS9) {\n                      //iOS 9\n                      self.systemVoicesReady(self.cache_ios9_voices);\n                    } else {\n                      //iOS <9\n                      self.systemVoicesReady(self.cache_ios_voices);\n                    } //Needs to be output\n\n\n                    console.log('RV: Voice support ready (cached)');\n                  } else {\n                    //Needs to be output\n                    console.log(\"RV: speechSynthesis present but no system voices found\");\n                    self.enableFallbackMode();\n                  }\n                } else {\n                  //We don't support voices. Using fallback\n                  self.enableFallbackMode();\n                }\n              }\n            } else {\n              //Needs to be output\n              console.log('RV: Voice support ready');\n              self.systemVoicesReady(v);\n              clearInterval(gsvinterval);\n            }\n          }, 100);\n        }, 100);\n      } //Enable user interaction hooks by default on mobile and safari\n\n\n      if (self.iOS || self.is_android || self.is_safari) {\n        self.enableWindowClickHook();\n      }\n\n      self.Dispatch(\"OnLoad\");\n    };\n\n    self.systemVoicesReady = function (v) {\n      self.systemvoices = v;\n      self.mapRVs();\n      if (self.OnVoiceReady != null) self.OnVoiceReady.call(); // TO BE DEPRECATED\n\n      self.Dispatch(\"OnReady\");\n      if (window.hasOwnProperty('dispatchEvent')) window.dispatchEvent(new Event(\"ResponsiveVoice_OnReady\"));\n    };\n\n    self.enableFallbackMode = function () {\n      self.fallbackMode = true;\n      self.forcedFallbackMode = true; //Needs to be output\n\n      console.log('RV: Enabling fallback mode');\n      self.mapRVs();\n      if (self.OnVoiceReady != null) self.OnVoiceReady.call(); // TO BE DEPRECATED\n\n      self.Dispatch(\"OnReady\");\n      if (window.hasOwnProperty('dispatchEvent')) window.dispatchEvent(new Event(\"ResponsiveVoice_OnReady\"));\n      self.Dispatch(\"OnServiceSwitched\");\n    };\n\n    self.getVoices = function () {\n      //Create voices array\n      var v = [];\n\n      for (var i = 0; i < self.responsivevoices.length; i++) {\n        v.push({\n          name: self.responsivevoices[i].name\n        });\n      }\n\n      return v;\n    };\n\n    self.speak = function (text, voicename, parameters) {\n      if (self.rvsMapped) {\n        var serviceUsed = null; //all iOS initialization\n\n        /* if (self.iOS && !self.iOS_initialized) {\n             self.log(\"Initializing ios10\");\n             setTimeout(function(){ self.speak(text,voicename,parameters);},100);\n             self.clickEvent();\n             self.iOS_initialized = true;\n             return;\n         }*/\n        //Cancel previous speech if it's already playing\n\n        if (self.isPlaying()) {\n          self.log(\"Cancelling previous speech\");\n          self.cancel();\n          setTimeout(function () {\n            self.speak(text, voicename, parameters);\n          }, 50);\n          return;\n        } //Clean text\n        // Quotes \" and ` -> '\n\n\n        text = text.replace(/[\\\"\\`]/gm, \"'\");\n        self.msgparameters = parameters || {};\n        self.msgtext = text;\n        self.msgvoicename = voicename;\n        self.onstartFired = false; //Support for multipart text (there is a limit on characters)\n\n        var multipartText = [];\n\n        if (text.length > self.CHARACTER_LIMIT) {\n          var tmptxt = text;\n\n          while (tmptxt.length > self.CHARACTER_LIMIT) {\n            //Split by common phrase delimiters\n            var p = tmptxt.search(/([:!Â¡?Â¿;\\(\\)\\[\\]â€”Â«Â»\\n]+|\\.[^0-9]+)/);\n            var part = ''; //Coludn't split by priority characters, try commas\n\n            if (p == -1 || p >= self.CHARACTER_LIMIT) {\n              p = tmptxt.search(/,[^0-9]+/);\n            } //Check for spaces. If no spaces then split by 99 characters.\n\n\n            if (p == -1) {\n              if (tmptxt.search(' ') == -1) p = 99;\n            } //Couldn't split by normal characters, then we use spaces\n\n\n            if (p == -1 || p >= self.CHARACTER_LIMIT) {\n              var words = tmptxt.split(' ');\n\n              for (var i = 0; i < words.length; i++) {\n                if (part.length + words[i].length + 1 > self.CHARACTER_LIMIT) break;\n                part += (i != 0 ? ' ' : '') + words[i];\n              }\n            } else {\n              part = tmptxt.substr(0, p + 1);\n            }\n\n            tmptxt = tmptxt.substr(part.length, tmptxt.length - part.length);\n            multipartText.push(part); //self.log(part.length + \" - \" + part);\n          } //Add the remaining text\n\n\n          if (tmptxt.length > 0) {\n            multipartText.push(tmptxt);\n          }\n        } else {\n          //Small text\n          multipartText.push(text);\n        }\n\n        console.log(multipartText);\n        self.multipartText = multipartText; //Find system voice that matches voice name\n\n        var rv;\n\n        if (voicename == null) {\n          rv = self.default_rv;\n          self.setDefaultVoice(rv.name);\n        } else {\n          rv = self.getResponsiveVoice(voicename);\n        } //Deprecated announcement\n\n\n        if (rv.deprecated === true) {\n          console.warn(\"ResponsiveVoice: Voice \" + rv.name + \" is deprecated and will be removed in future releases\");\n        }\n\n        var profile = {}; //Map was done so no need to look for the mapped voice\n\n        if (rv.mappedProfile != null) {\n          profile = rv.mappedProfile;\n        } else {\n          profile.systemvoice = self.getMatchedVoice(rv);\n          profile.collectionvoice = {};\n\n          if (profile.systemvoice == null) {\n            //Needs to be output\n            console.log('RV: ERROR: No voice found for: ' + voicename);\n            return;\n          }\n        } //Check we have permission to play audio (mobile)\n\n\n        var speechAllowed = self.checkSpeechAllowed();\n\n        if (!speechAllowed) {\n          self.scheduledSpeak = {\n            text: text,\n            voicename: voicename,\n            parameters: parameters\n          };\n          return;\n        } //Prevent fallbackmode to play more than 1 speech at the same time\n\n\n        if (self.fallbackMode && self.fallback_audiopool.length > 0) {\n          self.clearFallbackPool();\n        }\n\n        self.msgprofile = profile;\n        self.log('Voice picked: ' + self.msgprofile.systemvoice.name); //self.log(\"Start multipart play\");\n\n        self.utterances = [];\n        self.fallbackChunks = []; //Play multipart text\n\n        for (var i = 0; i < multipartText.length; i++) {\n          if (!self.fallbackMode && self.getServiceEnabled(self.services.NATIVE_TTS)) {\n            //Use SpeechSynthesis\n            self.log('Using SpeechSynthesis');\n            serviceUsed = self.services.NATIVE_TTS; //Create msg object\n\n            var msg = new SpeechSynthesisUtterance();\n            msg.voiceURI = profile.systemvoice.voiceURI;\n            msg.volume = self.selectBest([profile.collectionvoice.volume, profile.systemvoice.volume, 1]); // 0 to 1\n\n            msg.rate = self.selectBest([self.iOS9plus ? 1 : null, profile.collectionvoice.rate, profile.systemvoice.rate, 1]); // 0.1 to 10 ** override iOS 0.25 rate\n\n            msg.pitch = self.selectBest([profile.collectionvoice.pitch, profile.systemvoice.pitch, 1]); //0 to 2*/\n\n            msg.text = multipartText[i];\n            msg.lang = self.selectBest([profile.collectionvoice.lang, profile.systemvoice.lang]);\n            msg.rvIndex = i;\n            msg.rvTotal = multipartText.length;\n\n            if (i == 0) {\n              msg.onstart = self.speech_onstart;\n            }\n\n            self.msgparameters.onendcalled = false;\n\n            if (parameters != null) {\n              msg.voice = typeof parameters.voice !== 'undefined' ? parameters.voice : profile.systemvoice;\n              ;\n\n              if (i < multipartText.length - 1 && multipartText.length > 1) {\n                msg.onend = self.onPartEnd;\n                if (msg.hasOwnProperty(\"addEventListener\")) msg.addEventListener('end', self.onPartEnd);\n              } else {\n                msg.onend = self.speech_onend;\n                if (msg.hasOwnProperty(\"addEventListener\")) msg.addEventListener('end', self.speech_onend);\n              }\n\n              msg.onerror = parameters.onerror || function (e) {\n                self.log('RV: Unknow Error');\n                self.log(e);\n              };\n\n              msg.onpause = parameters.onpause;\n              msg.onresume = parameters.onresume;\n              msg.onmark = parameters.onmark;\n              msg.onboundary = parameters.onboundary || self.onboundary;\n              msg.pitch = parameters.pitch != null ? parameters.pitch : msg.pitch;\n\n              if (self.iOS) {\n                msg.rate = (parameters.rate != null ? parameters.rate * parameters.rate : 1) * msg.rate;\n              } else {\n                msg.rate = (parameters.rate != null ? parameters.rate : 1) * msg.rate;\n              }\n\n              msg.volume = parameters.volume != null ? parameters.volume : msg.volume;\n            } else {\n              self.log('No Params received for current Utterance');\n              msg.voice = profile.systemvoice;\n              ;\n              msg.onend = self.speech_onend;\n              msg.onboundary = self.onboundary;\n\n              msg.onerror = function (e) {\n                self.log('RV: Unknow Error');\n                self.log(e);\n              };\n            }\n\n            self.utterances.push(msg);\n            if (i == 0) self.currentMsg = msg; //This needs to be output for stability\n\n            console.log(msg); //setTimeout(function(){\n            //speechSynthesis.speak(msg);\n            //},0);\n\n            self.tts_speak(msg);\n          } else if (self.fallbackMode && self.getServiceEnabled(self.services.FALLBACK_AUDIO)) {\n            serviceUsed = self.services.FALLBACK_AUDIO;\n            self.fallback_playbackrate = self.def_fallback_playbackrate;\n            var pitch = self.selectBest([profile.collectionvoice.pitch, profile.systemvoice.pitch, 1]); //0 to 2*/\n\n            var rate = self.selectBest([self.iOS9plus ? 1 : null, profile.collectionvoice.rate, profile.systemvoice.rate, 1]); // 0.1 to 10 ** override iOS 0.25 rate\n\n            var volume = self.selectBest([profile.collectionvoice.volume, profile.systemvoice.volume, 1]); // 0 to 1\n\n            var extraParams;\n\n            if (parameters != null) {\n              pitch = (parameters.pitch != null ? parameters.pitch : 1) * pitch;\n              rate = (parameters.rate != null ? parameters.rate : 1) * rate;\n              volume = (parameters.volume != null ? parameters.volume : 1) * volume;\n              extraParams = parameters.extraParams || null;\n            }\n\n            pitch /= 2;\n            rate /= 2;\n            volume *= 2;\n            pitch = Math.min(Math.max(pitch, 0), 1);\n            rate = Math.min(Math.max(rate, 0), 1);\n            volume = Math.min(Math.max(volume, 0), 1); //self.log(volume);\n            //self.fallback_playbackrate = pitch;\n\n            var url = self.fallbackServicePath + '?t=' + encodeURIComponent(multipartText[i]) + '&tl=' + (profile.collectionvoice.lang || profile.systemvoice.lang || 'en-US') + '&sv=' + (profile.collectionvoice.service || profile.systemvoice.service || '') + '&vn=' + (profile.collectionvoice.voicename || profile.systemvoice.voicename || '') + '&pitch=' + pitch.toString() + '&rate=' + rate.toString() + '&vol=' + volume.toString();\n\n            if (extraParams) {\n              url += \"&extraParams=\" + JSON.stringify(extraParams);\n            }\n\n            self.fallbackChunks.push({\n              text: multipartText[i],\n              url: url,\n              audio: null //not assigned yet\n\n            }); //self.log(audio);\n          }\n        }\n\n        if (self.fallbackMode && self.getServiceEnabled(self.services.FALLBACK_AUDIO)) {\n          self.fallbackChunkIndex = 0;\n          self.fallback_startPart();\n        } //Log service used\n\n\n        self.log(\"Service used: \" + serviceUsed);\n      } else {\n        var rvCheck = setTimeout(function () {\n          self.speak(text, voicename, parameters);\n        }, 15);\n      }\n    };\n\n    self.startTimeout = function (text, callback) {\n      //if (self.iOS) {\n      //   multiplier = 0.5;\n      //}\n      var multiplier = self.msgprofile.collectionvoice.timerSpeed;\n      if (self.msgprofile.collectionvoice.timerSpeed == null) multiplier = 1; //self.log(self.msgprofile.collectionvoice.name);\n\n      if (multiplier <= 0) return;\n      self.timeoutId = setTimeout(callback, self.getEstimatedTimeLength(text, multiplier));\n      self.log(\"Timeout ID: \" + self.timeoutId);\n    };\n\n    self.checkAndCancelTimeout = function () {\n      if (self.timeoutId != null) {\n        //self.log(\"Timeout \" + self.timeoutId + \" cancelled\");\n        clearTimeout(self.timeoutId);\n        self.timeoutId = null;\n      }\n    };\n\n    self.speech_timedout = function () {\n      //self.log(\"Speech cancelled: Timeout \" + self.timeoutId + \" ended\");\n      self.cancel();\n      self.cancelled = false; //if (!self.iOS) //On iOS, cancel calls msg.onend\n\n      self.speech_onend();\n    };\n\n    self.speech_onend = function () {\n      self.checkAndCancelTimeout(); //Avoid this being automatically called just after calling speechSynthesis.cancel\n\n      if (self.cancelled === true) {\n        self.cancelled = false;\n        return;\n      }\n\n      self.log(\"on end fired\");\n\n      if (self.msgparameters != null && self.msgparameters.onend != null && self.msgparameters.onendcalled != true) {\n        self.log(\"Speech on end called  -\" + self.msgtext);\n        self.msgparameters.onendcalled = true;\n        self.msgparameters.onend();\n      }\n    };\n\n    self.speech_onstart = function () {\n      //Start can be triggered after onboundary!\n      if (self.onstartFired) return;\n      self.onstartFired = true; //if (!self.iOS)\n\n      self.log(\"Speech start\");\n\n      if (self.iOS || self.is_safari || self.useTimer) {\n        if (!self.fallbackMode) self.startTimeout(self.msgtext, self.speech_timedout);\n      }\n\n      self.msgparameters.onendcalled = false;\n\n      if (self.msgparameters != null && self.msgparameters.onstart != null) {\n        self.msgparameters.onstart();\n      }\n    };\n\n    self.fallback_startPart = function () {\n      if (self.fallbackChunkIndex == 0) {\n        self.speech_onstart();\n      }\n\n      self.fallback_updateChunksBuffer();\n      self.fallback_audio = self.fallbackChunks[self.fallbackChunkIndex].audio;\n\n      if (self.fallback_audio == null) {\n        //Fallback audio is not working. Just wait for the timeout event\n        self.log(\"RV: Fallback Audio is not available\");\n      } else {\n        (function () {\n          var audio = self.fallback_audio; //Add to pool to prevent multiple streams to be played at the same time\n          //self.fallback_audiopool.push(audio);\n\n          setTimeout(function () {\n            audio.playbackRate = self.fallback_playbackrate;\n          }, 50);\n\n          audio.onloadedmetadata = function () {\n            //audio.play();\n            audio.playbackRate = self.fallback_playbackrate;\n          };\n\n          if (audio.readyState >= 2) {\n            audio.play();\n          } else {\n            var canPlay = function canPlay() {\n              audio.play();\n              audio.removeEventListener('canplaythrough', canPlay);\n            };\n\n            audio.addEventListener('canplaythrough', canPlay, false);\n          }\n        })();\n        /*self.fallback_audio.addEventListener('error', function (e) {\n            switch (e.target.error.code) {\n                 case e.target.error.MEDIA_ERR_ABORTED:\n                   self.log(\"RV: Error playing the file (aborted)\");\n                   break;\n                 case e.target.error.MEDIA_ERR_NETWORK:\n                   self.log(\"RV: Error playing the file (network)\");\n                   break;\n                 case e.target.error.MEDIA_ERR_DECODE:\n                   self.log(\"RV: Error playing the file (decode)\");\n                   break;\n                 case e.target.error.MEDIA_ERR_SRC_NOT_SUPPORTED:\n                     self.log(\"RV: Error playing the file (not supported), skipping\");\n                    // audio playback failed. End speech\n                    setTimeout(function(){\n                        self.speech_onend();\n                        self.fallback_errors = true;\n                    },10);\n                    break;\n                 default:\n                   self.log(\"RV: Error playing the file (unknown)\");\n                   break;\n               }\n        }, true);*/\n\n\n        if (self.fallback_errors) {\n          self.log(\"RV: Speech cancelled due to errors\");\n          self.speech_onend();\n        } //self.fallback_audio.play();\n\n\n        self.fallback_audio.addEventListener('ended', self.fallback_finishPart);\n        if (self.useTimer) self.startTimeout(self.multipartText[self.fallbackChunkIndex], self.fallback_finishPart);\n      }\n    };\n    /**\n     * returns true if any of the fallback audio parts is currently playing\n     */\n\n\n    self.isFallbackAudioPlaying = function () {\n      var c;\n\n      for (c = 0; c < self.fallback_audiopool.length; c++) {\n        var audio = self.fallback_audiopool[c];\n\n        if (audio.paused || audio.ended || audio.currentTime == audio.duration) {//Any of those means audio is not playing\n        } else {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    self.fallback_finishPart = function (e) {\n      /**\n       * don't overlap audios\n       */\n      if (self.isFallbackAudioPlaying()) {\n        self.checkAndCancelTimeout();\n        self.timeoutId = setTimeout(self.fallback_finishPart, (self.fallback_audio.duration - self.fallback_audio.currentTime) * 1000);\n        return;\n      }\n\n      self.checkAndCancelTimeout();\n\n      if (self.fallbackChunkIndex < self.fallbackChunks.length - 1) {\n        //self.log('chunk ended');\n        self.fallbackChunkIndex++;\n        self.fallback_startPart();\n      } else {\n        //self.log('msg ended');\n        self.speech_onend();\n      }\n    };\n\n    self.cancel = function () {\n      self.checkAndCancelTimeout();\n\n      if (self.fallbackMode) {\n        if (self.fallback_audio != null) self.fallback_audio.pause();\n        self.clearFallbackPool();\n      } else {\n        self.cancelled = true;\n        speechSynthesis.cancel();\n      }\n    };\n\n    self.voiceSupport = function () {\n      return 'speechSynthesis' in window;\n    };\n\n    self.OnFinishedPlaying = function (event) {\n      //self.log(\"OnFinishedPlaying\");\n      if (self.msgparameters != null) {\n        if (self.msgparameters.onend != null) self.msgparameters.onend();\n      }\n    }; //Set default voice to use when no voice name is supplied to speak()\n\n\n    self.setDefaultVoice = function (voicename) {\n      if (self.rvsMapped) {\n        var rv = self.getResponsiveVoice(voicename);\n\n        if (rv != null) {\n          self.default_rv = rv;\n        }\n      } else {\n        var rvCheck = setTimeout(function () {\n          self.setDefaultVoice(voicename);\n        }, 15);\n      }\n    }; //Map responsivevoices to system voices\n\n\n    self.mapRVs = function () {\n      for (var i = 0; i < self.responsivevoices.length; i++) {\n        var rv = self.responsivevoices[i];\n\n        for (var j = 0; j < rv.voiceIDs.length; j++) {\n          var vcoll = self.voicecollection[rv.voiceIDs[j]];\n\n          if (vcoll.fallbackvoice != true) {\n            // vcoll.fallbackvoice would be null instead of false\n            // Look on system voices\n            var v = self.getSystemVoice(vcoll.name); //Forcing fallback mode: force ignore system voices\n\n            if (self.forcedFallbackMode) {\n              v = null;\n            }\n\n            if (v != null) {\n              rv.mappedProfile = {\n                systemvoice: v,\n                collectionvoice: vcoll\n              }; //self.log(\"Mapped \" + rv.name + \" to \" + v.name);\n\n              break;\n            }\n          } else {\n            //Pick the fallback voice\n            rv.mappedProfile = {\n              systemvoice: {},\n              collectionvoice: vcoll\n            }; //self.log(\"Mapped \" + rv.name + \" to \" + vcoll.lang + \" fallback voice\");\n\n            break;\n          }\n        }\n      }\n\n      self.rvsMapped = true;\n    }; //Look for the voice in the system that matches the one in our collection\n\n\n    self.getMatchedVoice = function (rv) {\n      for (var i = 0; i < rv.voiceIDs.length; i++) {\n        var v = self.getSystemVoice(self.voicecollection[rv.voiceIDs[i]].name);\n        if (v != null) return v;\n      }\n\n      return null;\n    };\n\n    self.getSystemVoice = function (name) {\n      var encodedName = '';\n      var unicodeWhiteSpace = String.fromCharCode(160),\n          encodedName = name.replace(new RegExp('\\\\s+|' + unicodeWhiteSpace, 'g'), '');\n\n      if (typeof self.systemvoices === 'undefined' || self.systemvoices === null) {\n        return null;\n      }\n\n      for (var i = 0; i < self.systemvoices.length; i++) {\n        //Simple compare first\n        if (0 === self.systemvoices[i].name.localeCompare(name)) {\n          return self.systemvoices[i];\n        } //Try to match chromes asian language space charaacters\n\n\n        if (0 === self.systemvoices[i].name.replace(new RegExp('\\\\s+|' + unicodeWhiteSpace, 'g'), '').replace(/ *\\([^)]*\\) */g, \"\").localeCompare(encodedName)) {\n          return self.systemvoices[i];\n        }\n      } //Not found by name. Try lang (iOS9) -- mixes up chrome voices with android voices\n\n      /*for (var i = 0; i < self.systemvoices.length; i++) {\n          if (self.systemvoices[i].lang == name)\n              return self.systemvoices[i];\n      }*/\n\n\n      return null;\n    };\n\n    self.getResponsiveVoice = function (name) {\n      for (var i = 0; i < self.responsivevoices.length; i++) {\n        if (self.responsivevoices[i].name == name) {\n          var lastFbMode = self.fallbackMode; //set fallbackMode and parts, used when the profile fallbackvoice is true or when fallbackMode is forced\n\n          if (self.responsivevoices[i].mappedProfile.collectionvoice.fallbackvoice === true || self.forcedFallbackMode === true) {\n            self.fallbackMode = true;\n          } else {\n            self.fallbackMode = false;\n          } //Map RVs again if we are switching in or out of fallbackMode\n\n\n          if (lastFbMode != self.fallbackMode) {\n            self.mapRVs();\n            self.Dispatch(\"OnServiceSwitched\");\n          }\n\n          return self.responsivevoices[i];\n        }\n      }\n\n      return null;\n    };\n\n    self.Dispatch = function (name) {\n      //self.log(\"Dispatching \" +name);\n      if (self.hasOwnProperty(name + \"_callbacks\") && self[name + \"_callbacks\"] != null && self[name + \"_callbacks\"].length > 0) {\n        var callbacks = self[name + \"_callbacks\"];\n\n        for (var i = 0; i < callbacks.length; i++) {\n          callbacks[i]();\n        } //self.log(\"Dispatched \" + name);\n\n\n        return true;\n      } else {\n        //Try calling a few ms later\n        var timeoutName = name + \"_callbacks_timeout\";\n        var timeoutCount = name + \"_callbacks_timeoutCount\";\n\n        if (self.hasOwnProperty(timeoutName)) {} else {\n          //self.log(\"Setting up timeout for \" + name);\n          self[timeoutCount] = 10;\n          self[timeoutName] = setInterval(function () {\n            //self.log(\"Timeout function for \" + name)\n            self[timeoutCount] = self[timeoutCount] - 1;\n\n            if (self.Dispatch(name) || self[timeoutCount] < 0) {\n              clearTimeout(self[timeoutName]); //if (self[timeoutCount]<0) self.log(\"Timeout ran out\");\n            } else {//self.log(\"Keep waiting...\" + name);\n              }\n          }, 50);\n        } //self.log(\"not found\");\n\n\n        return false;\n      }\n    };\n\n    self.AddEventListener = function (name, callback) {\n      if (!self.hasOwnProperty(name + \"_callbacks\")) {\n        self[name + \"_callbacks\"] = [];\n      }\n\n      self[name + \"_callbacks\"].push(callback);\n    };\n\n    self.addEventListener = self.AddEventListener;\n\n    self.RemoveEventListener = function (name, callback) {\n      if (self[name + \"_callbacks\"] && self[name + \"_callbacks\"].indexOf(callback) != -1) {\n        self[name + \"_callbacks\"].splice(self[name + \"_callbacks\"].indexOf(callback), 1);\n      }\n    }; //Event designed to be hooked to any click event on the page and initialize permission to play audio\n    // iOS: Needed to play TTS\n    // Android: Needed to play audio files\n\n\n    self.clickEvent = function () {\n      self.log(\"Click event\");\n      self.click_event_detected = true;\n      self.initializePermissions(); //Remove hooks\n\n      self.userInteractionEvents.forEach(function (event) {\n        window.removeEventListener(event, self.clickEvent, false);\n      });\n      self.Dispatch(\"OnClickEvent\");\n    };\n\n    self.initializePermissions = function () {\n      //TTS\n      if (self.iOS && !self.iOS_initialized) {\n        self.log(\"Initializing iOS click event\");\n        var u = new SpeechSynthesisUtterance(\" \");\n        speechSynthesis.speak(u);\n        self.iOS_initialized = true;\n      }\n\n      if (self.is_android && !self.android_initialized) {\n        self.log(\"Initializing Android click event\");\n        var u = new SpeechSynthesisUtterance(\" \");\n        speechSynthesis.speak(u);\n      } //Fallback\n\n\n      self.initFallbackPool();\n    };\n\n    self.isPlaying = function () {\n      if (self.fallbackMode) {\n        return self.fallback_audio != null && !self.fallback_audio.ended && !self.fallback_audio.paused;\n      } else {\n        return speechSynthesis.speaking;\n      }\n    };\n\n    self.clearFallbackPool = function () {\n      for (var i = 0; i < self.fallback_audiopool.length; i++) {\n        if (self.fallback_audiopool[i] != null) {\n          self.fallback_audiopool[i].pause();\n          self.fallback_audiopool[i].src = ''; //self.fallback_audiopool[i].parentElement.removeChild(self.fallback_audiopool[i]);\n        }\n      } //self.fallback_audiopool = [];\n\n\n      self.fallback_audiopool_index = 0;\n      self.fallbackChunks = [];\n    };\n\n    self.initFallbackPool = function () {\n      //console.log(\"Init fallback pool\");\n      if (!self.fallback_audiopool || self.fallback_audiopool.length == 0) {\n        var poolLength = 10;\n\n        for (var i = 0; i < poolLength; i++) {\n          (function (i) {\n            var audio = document.createElement(\"AUDIO\");\n            audio.preload = 'auto'; //Only initialize them with sound on android (as this is triggered by the first user click)\n\n            if (self.is_android) {\n              audio.src = \"\";\n              audio.load(); //audio.play();\n\n              /*var canPlayCallback = function () {\n                  audio.play();\n                  audio.removeEventListener('canplaythrough', canPlayCallback);\n              }\n              audio.addEventListener('canplaythrough', canPlayCallback, false);\n               if (i == 0) {\n                  var initializedCallback = function () {\n                      self.log(\"Android audio initialized\");\n                      self.android_initialized = true;\n                      audio.removeEventListener('ended', initializedCallback);\n                  };\n                  audio.addEventListener('ended', initializedCallback);\n              }*/\n              //It seems we don't even need to play the audio, just loading an empty src does the trick\n\n              if (i == poolLength - 1) {\n                self.log(\"Android HTML audio initialized\");\n                self.android_initialized = true;\n              }\n            }\n\n            if (self.iOS) {\n              audio.src = \"\";\n              audio.load(); //audio.play();\n\n              /*var canPlayCallback = function () {\n               audio.play();\n               audio.removeEventListener('canplaythrough', canPlayCallback);\n               }\n               audio.addEventListener('canplaythrough', canPlayCallback, false);\n                if (i == 0) {\n               var initializedCallback = function () {\n               self.log(\"Android audio initialized\");\n               self.android_initialized = true;\n               audio.removeEventListener('ended', initializedCallback);\n               };\n               audio.addEventListener('ended', initializedCallback);\n               }*/\n              //It seems we don't even need to play the audio, just loading an empty src does the trick\n\n              if (i == poolLength - 1) {\n                self.log(\"iOS HTML audio initialized\");\n                self.iOS_initialized = true;\n              }\n            }\n\n            self.fallback_audiopool.push(audio);\n          })(i);\n        }\n\n        self.fallback_audiopool_index = 0;\n      }\n    };\n\n    self.allowSpeechClicked = function (value) {\n      self.allowSpeechDiv.parentNode.removeChild(self.allowSpeechDiv);\n      self.allowSpeechDiv = null;\n      self.speechAllowedByUser = value;\n\n      if (value) {\n        self.clickEvent();\n\n        if (self.scheduledSpeak) {\n          self.speak(self.scheduledSpeak.text, self.scheduledSpeak.voicename, self.scheduledSpeak.parameters);\n          self.scheduledSpeak = null;\n        }\n      }\n\n      self.Dispatch(\"OnAllowSpeechClicked\");\n    };\n\n    self.checkSpeechAllowed = function () {\n      //If the user explicitly denied access\n      if (self.speechAllowedByUser == false) {\n        return false;\n      } //If we are on mobile we can only initialize audio from a user action.\n      //If it didn't happen it means speak was called without any user interaction so we need to force it.\n      //Also applies to safari (html5 audio only)\n\n\n      if ((self.is_android || self.iOS || //Mobile\n      self.is_safari && (self.fallbackMode || self.forcedFallbackMode) //Safai but only fallback\n      ) && !self.click_event_detected) {\n        //self.enableWindowClickHook();\n        if (self.allowSpeechDiv) return;\n        self.allowSpeechDiv_appearances = self.allowSpeechDiv_appearances == null ? 1 : ++self.allowSpeechDiv_appearances;\n\n        if (self.allowSpeechDiv_appearances > 2) {\n          console.log(\"ResponsiveVoice: Speech not allowed by user\");\n          return false;\n        }\n\n        var cssnode = document.createElement('style');\n        cssnode.innerHTML = '.rvNotification{position:fixed;background-color:#fff;text-align:center;font-family:-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;font-weight:400;line-height:1.5;box-shadow:0 4px 8px 0 rgba(0,0,0,.2),0 6px 20px 0 rgba(0,0,0,.19);z-index:10000;width:100vw;left:0;bottom:0;font-size:1rem;padding-bottom:.5em;padding-right:.5em}.rvButtonRow{padding-right:2em;padding-bottom:1em;text-align:right;font-size:medium}.rvButton{cursor:pointer;display:inline-block;margin-left:1em;padding:.8em 2em;border-radius:3px;font-size:small}.rvButtonAllow{border:none;background-color:#2b8cff;color:#fff}.rvButtonDeny{border:1px solid #2b8cff;color:#2b8cff;background-color:#fff}.rvTextRow{padding-top:1em;padding-bottom:2em}@media (min-width:576px){.rvNotification{width:60vw;left:20vw}}@media (min-width:768px){.rvNotification{width:50vw;left:25vw}}@media (min-width:992px){.rvNotification{width:40vw;left:30vw}}@media (min-width:1200px){.rvNotification{width:30vw;left:35vw}}';\n        document.body.appendChild(cssnode);\n        self.allowSpeechDiv = document.createElement(\"div\");\n        self.allowSpeechDiv.classList.add('rvNotification');\n        self.allowSpeechDiv.innerHTML = '<div class=\"rvTextRow\"><strong>' + window.location.hostname + '</strong> wants to use speech</div><div class=\"rvButtonRow\"><div onclick=\"responsiveVoice.allowSpeechClicked(false);\" class=\"rvButton rvButtonDeny\">DENY</div><div onclick=\"responsiveVoice.allowSpeechClicked(true);\" class=\"rvButton rvButtonAllow\">ALLOW</div></div>';\n        document.body.appendChild(self.allowSpeechDiv);\n        return false;\n      }\n\n      return true;\n    };\n\n    self.fallback_audioPool_getAudio = function () {\n      self.initFallbackPool();\n\n      if (self.fallback_audiopool_index >= self.fallback_audiopool.length) {\n        //Pool is ended. We clear it\n        //self.log(\"Audio pool capacity over. Reusing from index 0\");\n        self.fallback_audiopool_index = 0;\n      }\n\n      return self.fallback_audiopool[self.fallback_audiopool_index++];\n    };\n\n    self.fallback_updateChunksBuffer = function () {\n      //Make sure we are ahead loading chunks\n      for (var i = self.fallbackChunkIndex; i < Math.min(self.fallbackChunks.length, self.fallbackChunkIndex + self.fallbackBufferLength); i++) {\n        var c = self.fallbackChunks[i];\n\n        if (c.audio == null) {\n          c.audio = self.fallback_audioPool_getAudio(); //Load the audio\n\n          c.audio.src = c.url;\n          c.audio.playbackRate = self.fallback_playbackrate;\n          c.audio.preload = 'auto';\n          c.audio.load(); // android doesn't allow playing audio without an user action. this initializes all audio chunks at first action so restriction is removed.\n        }\n      }\n    };\n\n    self.selectBest = function (a) {\n      for (var i = 0; i < a.length; i++) {\n        if (a[i] != null) return a[i];\n      }\n\n      return null;\n    };\n\n    self.pause = function () {\n      if (self.fallbackMode) {\n        if (self.fallback_audio != null) {\n          self.fallback_audio.pause();\n        }\n      } else {\n        speechSynthesis.pause();\n      }\n    };\n\n    self.resume = function () {\n      if (self.fallbackMode) {\n        if (self.fallback_audio != null) {\n          self.fallback_audio.play();\n        }\n      } else {\n        speechSynthesis.resume();\n      }\n    };\n\n    self.tts_speak = function (msg) {\n      setTimeout(function () {\n        self.cancelled = false;\n        speechSynthesis.speak(msg);\n      }, 0.01);\n    };\n\n    self.setVolume = function (v) {\n      if (self.isPlaying()) {\n        if (self.fallbackMode) {\n          for (var i = 0; i < self.fallback_audiopool.length; i++) {\n            self.fallback_audiopool[i].volume = v;\n          }\n\n          self.fallback_audio.volume = v;\n        } else {\n          for (var i = 0; i < self.utterances.length; i++) {\n            self.utterances[i].volume = v;\n          }\n        }\n      }\n    };\n\n    self.onPartEnd = function (e) {\n      if (self.msgparameters != null && self.msgparameters.onchuckend != null) {\n        self.msgparameters.onchuckend();\n      }\n\n      self.Dispatch(\"OnPartEnd\");\n      var i = self.utterances.indexOf(e.utterance);\n      self.currentMsg = self.utterances[i + 1];\n    };\n\n    self.onboundary = function (e) {\n      self.log(\"On Boundary\"); //on iOS on boundary sometimes will be fired when start hasn't. We use this as a false start.\n\n      if (self.iOS && !self.onstartFired) {\n        self.speech_onstart();\n      }\n    };\n\n    self.numToWords = function (n) {\n      var _slicedToArray = function () {\n        function sliceIterator(arr, i) {\n          var _arr = [];\n          var _n = true;\n          var _d = false;\n          var _e = undefined;\n\n          try {\n            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n              _arr.push(_s.value);\n\n              if (i && _arr.length === i) break;\n            }\n          } catch (err) {\n            _d = true;\n            _e = err;\n          } finally {\n            try {\n              if (!_n && _i[\"return\"]) _i[\"return\"]();\n            } finally {\n              if (_d) throw _e;\n            }\n          }\n\n          return _arr;\n        }\n\n        return function (arr, i) {\n          if (Array.isArray(arr)) {\n            return arr;\n          } else if (Symbol.iterator in Object(arr)) {\n            return sliceIterator(arr, i);\n          } else {\n            throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n          }\n        };\n      }();\n\n      function _toConsumableArray(arr) {\n        if (Array.isArray(arr)) {\n          for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n          }\n\n          return arr2;\n        } else {\n          return Array.from(arr);\n        }\n      }\n\n      var arr = function arr(x) {\n        return Array.from(x);\n      };\n\n      var num = function num(x) {\n        return Number(x) || 0;\n      };\n\n      var isEmpty = function isEmpty(xs) {\n        return xs.length === 0;\n      };\n\n      var take = function take(n) {\n        return function (xs) {\n          return xs.slice(0, n);\n        };\n      };\n\n      var drop = function drop(n) {\n        return function (xs) {\n          return xs.slice(n);\n        };\n      };\n\n      var reverse = function reverse(xs) {\n        return xs.slice(0).reverse();\n      };\n\n      var comp = function comp(f) {\n        return function (g) {\n          return function (x) {\n            return f(g(x));\n          };\n        };\n      };\n\n      var not = function not(x) {\n        return !x;\n      };\n\n      var chunk = function chunk(n) {\n        return function (xs) {\n          return isEmpty(xs) ? [] : [take(n)(xs)].concat(_toConsumableArray(chunk(n)(drop(n)(xs))));\n        };\n      };\n\n      var a = ['', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];\n      var b = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\n      var g = ['', 'thousand', 'million', 'billion', 'trillion', 'quadrillion', 'quintillion', 'sextillion', 'septillion', 'octillion', 'nonillion']; // this part is really nasty still\n      // it might edit this again later to show how Monoids could fix this up\n\n      var makeGroup = function makeGroup(_ref) {\n        var _ref2 = _slicedToArray(_ref, 3);\n\n        var ones = _ref2[0];\n        var tens = _ref2[1];\n        var huns = _ref2[2];\n        return [num(huns) === 0 ? '' : a[huns] + ' hundred ', num(ones) === 0 ? b[tens] : b[tens] && b[tens] + ' ' || '', a[tens + ones] || a[ones]].join('');\n      };\n\n      var thousand = function thousand(group, i) {\n        return group === '' ? group : group + ' ' + g[i];\n      };\n\n      if (typeof n === 'number') return self.numToWords(String(n));else if (n === '0') return 'zero';else return comp(chunk(3))(reverse)(arr(n)).map(makeGroup).map(thousand).filter(comp(not)(isEmpty)).reverse().join(' ').trim();\n    };\n\n    self.getWords = function (text) {\n      //Process currencies\n      text = text.replace(/$|Â¥|â‚¡|â‚¬|Â£|â‚ª|â‚¹|ï¿¥|áŸ›|â‚©|â‚¦|à¸¿|â‚´|â‚«/gi, \" dummy currency \");\n      var words = text.split(/(\\s*[\\s,]\\s*|\\?|;|:|\\.|\\(|\\)|!)/),\n          match;\n      words = words.filter(function (str) {\n        return /[^\\s]/.test(str);\n      }); //find numbers, translate them to text, push as words\n\n      for (var i = 0; i < words.length; i++) {\n        if ((match = words[i].toString().match(/\\d+/)) != null) {\n          words.splice(i, 1);\n          self.numToWords(+match[0]).split(/\\s+/).map(function (word) {\n            words.push(word);\n          });\n        }\n      }\n\n      return words;\n    };\n\n    self.getEstimatedTimeLength = function (text, multiplier) {\n      var words = self.getWords(text),\n          charsCount = 0,\n          base = self.fallbackMode ? 1300 : 700,\n          multiplier = multiplier || 1\n      /*, minWordLengthInText = 0, maxWordLengthInText = 0*/\n      ;\n      words.map(function (word, i) {\n        charsCount += (word.toString().match(/[^ ]/igm) || word).length;\n        /*self.log(minWordLengthInText, maxWordLengthInText);\n         if (minWordLengthInText > 0 && minWordLengthInText > word.length) {\n        minWordLengthInText = word.length;\n        } else if (maxWordLengthInText > 0 && maxWordLengthInText < word.length) {\n        maxWordLengthInText = word.length;\n        } else if (minWordLengthInText == 0 && maxWordLengthInText == 0) {\n        minWordLengthInText = maxWordLengthInText = word.length;\n        }*/\n      }); //self.log(\"Words: [\" + words + \"], charsCount: \" + charsCount);\n\n      var wordsCount = words.length; //var avgWordLengthInText = (minWordLengthInText + maxWordLengthInText) / 2;\n      //self.log(minWordLengthInText, maxWordLengthInText, avgWordLengthInText);\n      //var wlf = (charsCount/wordsCount) / avgWordLengthInText * 5.1; //word length factor: 5.1 is the average word length in english.\n\n      var estimatedLength = multiplier * 1000 * (60 / self.WORDS_PER_MINUTE) * wordsCount\n      /** wlf*/\n      ;\n\n      if (wordsCount < 5) {\n        estimatedLength = multiplier * (base + charsCount * 50);\n      }\n\n      self.log(\"Estimated time length: \" + estimatedLength + \" ms, words: [\" + words + \"], charsCount: \" + charsCount);\n      return estimatedLength;\n    };\n\n    self.services = {\n      NATIVE_TTS: 0,\n      FALLBACK_AUDIO: 1\n    };\n    self.servicesPriority = [0, 1];\n    self.servicesEnabled = [];\n\n    self.setServiceEnabled = function (service, enabled) {\n      self.servicesEnabled[service] = enabled;\n    };\n\n    self.getServiceEnabled = function (service) {\n      return self.servicesEnabled[service] || false;\n    }; //Default services status\n\n\n    self.setServiceEnabled(self.services.NATIVE_TTS, true);\n    self.setServiceEnabled(self.services.FALLBACK_AUDIO, true);\n\n    self.forceFallbackMode = function (value) {\n      self.forcedFallbackMode = value;\n      self.fallbackMode = value;\n      self.mapRVs();\n      self.Dispatch(\"OnServiceSwitched\");\n    };\n\n    self.enableWindowClickHook = function () {\n      self.userInteractionEvents.forEach(function (event) {\n        window.addEventListener(event, self.clickEvent, false);\n      });\n    }; //Keep this at the end\n\n\n    if (document.readyState === \"interactive\") {\n      //Already loaded\n      self.init();\n    } else {\n      document.addEventListener('DOMContentLoaded', function () {\n        self.init();\n      });\n    }\n  };\n\n  var responsiveVoice = new ResponsiveVoice();\n}\n\nmodule.exports = responsiveVoice;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/js/lib/ResponsiveVoice.js\n");

/***/ }),

/***/ "./public/js/raw/plain/log.js":
/*!************************************!*\
  !*** ./public/js/raw/plain/log.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar log = function log(t, deco, type) {\n  if (type === \"normal\" || type === undefined) {\n    if (deco === \"\") {\n      console.log(t);\n    } else {\n      console.log(\"%c\" + t, deco);\n    }\n  } else if (type === \"clear\") {\n    console.clear();\n\n    if (deco === \"\") {\n      console.log(\"log cleared\");\n    } else {\n      console.log(\"%c log cleared\", deco);\n    }\n  } else if (type === \"groupbegin\") {\n    if (deco === \"\") {\n      console.group(t);\n    } else {\n      console.group(\"%c\" + t, deco);\n    }\n  } else if (type === \"groupend\") {\n    if (deco === \"\") {\n      console.log(t);\n      console.groupEnd();\n    } else {\n      console.log(\"%c\" + t, deco);\n      console.groupEnd();\n    }\n  } else if (type === \"warn\") {\n    if (deco === \"\") {\n      console.warn(t);\n    } else {\n      console.warn(\"%c\" + t, deco);\n    }\n  } else if (type === \"error\") {\n    if (deco === \"\") {\n      console.error(t);\n    } else {\n      console.error(\"%c\" + t, deco);\n    }\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (log);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvanMvcmF3L3BsYWluL2xvZy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3B1YmxpYy9qcy9yYXcvcGxhaW4vbG9nLmpzP2NlODciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGxvZyA9IGZ1bmN0aW9uIGxvZyh0LCBkZWNvLCB0eXBlKSB7XG4gICAgaWYgKHR5cGUgPT09IFwibm9ybWFsXCIgfHwgdHlwZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGlmIChkZWNvID09PSBcIlwiKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyh0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiJWNcIiArIHQsIGRlY28pO1xuICAgICAgICB9XG4gICAgfSBlbHNlIGlmICh0eXBlID09PSBcImNsZWFyXCIpIHtcbiAgICAgICAgY29uc29sZS5jbGVhcigpO1xuICAgICAgICBpZiAoZGVjbyA9PT0gXCJcIikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJsb2cgY2xlYXJlZFwiKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiJWMgbG9nIGNsZWFyZWRcIiwgZGVjbyk7XG4gICAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHR5cGUgPT09IFwiZ3JvdXBiZWdpblwiKSB7XG4gICAgICAgIGlmIChkZWNvID09PSBcIlwiKSB7XG4gICAgICAgICAgICBjb25zb2xlLmdyb3VwKHQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5ncm91cChcIiVjXCIgKyB0LCBkZWNvKTtcbiAgICAgICAgfVxuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJncm91cGVuZFwiKSB7XG4gICAgICAgIGlmIChkZWNvID09PSBcIlwiKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyh0KTtcbiAgICAgICAgICAgIGNvbnNvbGUuZ3JvdXBFbmQoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiJWNcIiArIHQsIGRlY28pO1xuICAgICAgICAgICAgY29uc29sZS5ncm91cEVuZCgpO1xuICAgICAgICB9XG4gICAgfSBlbHNlIGlmICh0eXBlID09PSBcIndhcm5cIikge1xuICAgICAgICBpZiAoZGVjbyA9PT0gXCJcIikge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKHQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKFwiJWNcIiArIHQsIGRlY28pO1xuICAgICAgICB9XG4gICAgfSBlbHNlIGlmICh0eXBlID09PSBcImVycm9yXCIpIHtcbiAgICAgICAgaWYgKGRlY28gPT09IFwiXCIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IodCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiJWNcIiArIHQsIGRlY28pO1xuICAgICAgICB9XG4gICAgfVxufTtcbmV4cG9ydCBkZWZhdWx0IGxvZyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./public/js/raw/plain/log.js\n");

/***/ }),

/***/ "./public/js/raw/plain/typequiz.js":
/*!*****************************************!*\
  !*** ./public/js/raw/plain/typequiz.js ***!
  \*****************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lib_ResponsiveVoice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/ResponsiveVoice.js */ \"./public/js/lib/ResponsiveVoice.js\");\n/* harmony import */ var _lib_ResponsiveVoice_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lib_ResponsiveVoice_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./log */ \"./public/js/raw/plain/log.js\");\n\n\n\n\n\nvar random = function random(a, b) {\n  return Math.floor(Math.random() * b) + a;\n};\n\nvar keys = {\n  \"65\": \"a\",\n  \"66\": \"b\",\n  \"67\": \"c\",\n  \"68\": \"d\",\n  \"69\": \"e\",\n  \"70\": \"f\",\n  \"71\": \"g\",\n  \"72\": \"h\",\n  \"73\": \"i\",\n  \"74\": \"j\",\n  \"75\": \"k\",\n  \"76\": \"l\",\n  \"77\": \"m\",\n  \"78\": \"n\",\n  \"79\": \"o\",\n  \"80\": \"p\",\n  \"81\": \"q\",\n  \"82\": \"r\",\n  \"83\": \"s\",\n  \"84\": \"t\",\n  \"85\": \"u\",\n  \"86\": \"v\",\n  \"87\": \"w\",\n  \"88\": \"x\",\n  \"89\": \"y\",\n  \"90\": \"z\"\n};\nvar time = count;\nvar error = new Audio('https://cdn.glitch.com/eb5b036c-82b3-497e-9d05-ce2a5a9d85e1%2FComputer%20Error%20Alert-SoundBible.com-783113881.mp3?v=1560114745306');\nvar tex = \"\";\nvar te = \"\";\nte = te.split(/[0-9]+\\s/);\nvar socket = window.socket;\nvar quote = true;\nvar complete = true;\nvar key;\nvar started = false;\nvar prompt = complete ? 0 : 3;\nvar cur = prompt;\nvar verse = quote ? 0 : random(0, te.length - 1);\nvar score = 0;\nvar count = quote ? 0 : 300;\nvar chapter = 1;\nvar book = \"hebrews\";\nvar up = quote ? 1 : -1;\nvar domver = document.getElementById(\"verse\");\nvar domref = document.getElementById(\"refrence\");\nvar domscore = document.getElementById(\"score\");\nvar dtimer = document.getElementById(\"timer\");\nvar wordbox = document.getElementById(\"words\");\nvar tq = document.getElementById(\"t-q\");\ndomref.innerHTML = book + \" \" + chapter + \":\" + (verse + 1);\ndomscore.innerHTML = \"score: \" + score;\ndtimer.textContent = count;\nvar ch = \"h1\";\nvar c = 1;\nvar chset = document.getElementById(\"ch-select\");\nvar qset = document.getElementById(\"ch-type\");\nvar pset = document.getElementById(\"ch-prompt\");\nvar sbtn = document.getElementById(\"type-start-btn\");\nvar set = document.getElementById(\"settings\");\nvar vchange = quote ? verse + 1 : random(0, te.length - 1);\nconsole.log(\"verse now = \" + (verse + 1));\nvar mylocalkey = \"koalastrikermi-bbqo-\";\n\nvar localsave = function localsave(vare, gs, t) {\n  if (gs === \"set\") {\n    localStorage.setItem(mylocalkey + vare, t); //log(\"localstorage item \" + mylocalkey + vare + \" is now set to: \" + localStorage.getItem(mylocalkey + vare));\n  } else if (gs === \"get\") {\n    //log(\"localstorage item \" + mylocalkey + vare + \" was returned as: \" + localStorage.getItem(mylocalkey + vare));\n    return localStorage.getItem(mylocalkey + vare);\n  } else if (gs === \"devare\") {\n    //log(mylocalkey + vare + \"  was devared\");\n    localStorage.removeItem(mylocalkey + vare);\n  }\n};\n\nvar nextver = function nextver(v) {\n  if (verse < te.length) {\n    console.log(\"verse = \" + v);\n    var text = te[verse];\n    text = text.replace(/([^abcdefghijklmnopqrstuvwxyz\\s0-9])([^abcdefghijklmnopqrstuvwxyz\\s0-9])/gi, \"$1$2 \").split(/\\s/g); //console.log(text);\n    //console.log(\"verse=\"+vchange);\n\n    if (text[text.length - 1] === \"\") {\n      text.pop();\n    }\n\n    domver.innerHTML = \"\";\n    score += 10;\n    domscore.innerHTML = \"score: \" + score; //console.log(\"verse now = \" + (verse + 1))\n\n    domref.innerHTML = book + \" \" + chapter + \":\" + (verse + 1);\n    cur = prompt;\n    console.log(!prompt);\n\n    if (!prompt) {\n      _lib_ResponsiveVoice_js__WEBPACK_IMPORTED_MODULE_0__[\"speak\"](book + \" \" + chapter + \":\" + (verse + 1), \"US English Male\", {\n        pitch: 1,\n        volume: 0.5,\n        rate: 1\n      });\n    } else {\n      for (var i = 0; i < cur; i++) {\n        domver.innerHTML += te[verse].replace(/([^abcdefghijklmnopqrstuvwxyz\\s0-9])([^abcdefghijklmnopqrstuvwxyz\\s0-9])/gi, \"$1 $2\").split(/\\s/g)[i] + \" \";\n        _lib_ResponsiveVoice_js__WEBPACK_IMPORTED_MODULE_0__[\"speak\"](te[verse].replace(/([^abcdefghijklmnopqrstuvwxyz\\s0-9])([^abcdefghijklmnopqrstuvwxyz\\s0-9])/gi, \"$1 $2\").split(/\\s/g)[i], \"US English Male\", {\n          pitch: 1,\n          volume: 0.5,\n          rate: 1\n        });\n      }\n    }\n\n    wbox(text);\n    /*console.log(text[cur] + \"-word\")\n    var dword = document.getElementById(text[cur].replace(/[-\\/\\\\^$*+?.,()|[\\]{}]/g, '-') + \"-word\");\n    dword.style.display = \"none\";*/\n  }\n};\n\nvar wbox = function wbox(text) {\n  wordbox.innerHTML = \"\";\n  var wordboxtext = text.splice(cur, text.length).sort();\n\n  for (var i = 0; i < wordboxtext.length; i++) {\n    if (wordboxtext[i].replace(/[-\\/\\\\^$*+?.,()|[\\]{}]/g, '') === \"\") {\n      continue;\n    }\n\n    var newListItem = document.createElement('span');\n    newListItem.innerHTML = wordboxtext[i].replace(/[-\\/\\\\^$*+?.,()|[\\]{}]/g, '');\n    newListItem.id = wordboxtext[i].replace(/[-\\/\\\\^$*+?.,()|[\\]{}]/g, '-').toLowerCase() + \"-word\";\n    newListItem.className = \"wordbox-word\";\n    newListItem.addEventListener('click', function (e) {\n      //console.log(e.path[\"0\"].childNodes[\"0\"].data)\n      var vchange = quote ? verse + 1 : random(1, te.length - 1);\n      var text = te[verse];\n      text = text.replace(/([^abcdefghijklmnopqrstuvwxyz\\s0-9])([^abcdefghijklmnopqrstuvwxyz\\s0-9])/gi, \"$1$2 \").split(/\\s/g); //console.log()\n\n      if (text[text.length - 1] === \"\") {\n        //console.log(text)\n        text.pop(); //console.log(text)\n      }\n\n      key = e.path[\"0\"].childNodes[\"0\"].data.toLowerCase(); //console.log(te);\n\n      e.preventDefault(); //console.log([text,cur,verse])\n\n      if (cur === text.length && text[cur].replace(/[-\\/\\\\^$*+?.,()|[\\]{}]/g, '').toLowerCase() === key && key !== undefined) {\n        verse = vchange;\n        _lib_ResponsiveVoice_js__WEBPACK_IMPORTED_MODULE_0__[\"speak\"](text[cur], \"US English Male\", {\n          pitch: 1,\n          volume: 0.5,\n          rate: 1\n        });\n        nextver(verse);\n      } else if (text[cur].toLowerCase().replace(/[-\\/\\\\^$*+?.,()|[\\]{}]/g, '') === key && key !== undefined) {\n        console.log(text[cur] + \"-word\");\n        var dword = document.getElementById(text[cur].toLowerCase().replace(/[-\\/\\\\^$*+?.,()|[\\]{}]/g, '-') + \"-word\");\n        dword.style.display = \"none\";\n        _lib_ResponsiveVoice_js__WEBPACK_IMPORTED_MODULE_0__[\"speak\"](text[cur], \"US English Male\", {\n          pitch: 1,\n          volume: 0.5,\n          rate: 1\n        });\n        score += 10;\n        domver.innerHTML = \"\";\n        domscore.innerHTML = \"score: \" + score;\n\n        for (var i = 0; i < cur + 1; i++) {\n          domver.innerHTML += text[i] + \" \";\n        } //console.log(key);\n\n\n        cur++; //console.log(cur,text.length)\n\n        if (cur === text.length) {\n          verse = vchange;\n          nextver(verse);\n        }\n      } else {\n        console.log(\"wrong\");\n        score -= 5;\n        domscore.innerHTML = \"score: \" + score;\n        error.play();\n      }\n    }); //console.log(newListItem.id);\n\n    wordbox.appendChild(newListItem);\n  }\n};\n\nfunction postData(url, data, then) {\n  // Default options are marked with *\n  return fetch(url, {\n    method: 'POST',\n    // *GET, POST, PUT, DELETE, etc.\n    headers: {\n      'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    body: JSON.stringify(data),\n    cache: 'default' // body data type must match \"Content-Type\" header\n\n  }).then(function (response) {\n    then(response);\n  })[\"catch\"](function (error) {\n    console.log(\"no internet doing default\", error, data);\n    location.reload();\n  }); // parses JSON response into native JavaScript objects \n\n  /*return new Promise(function (resolve, reject) {\n    console.log(\"sending\"+data)\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", url);\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.onload = function () {\n      return resolve(xhr.responseText);\n    };\n    xhr.onerror = function () {\n      return reject(xhr.statusText);\n    };\n    xhr.send(data);\n  }).then(function (successMessage) {\n    then(successMessage);\n  }).catch(function (error) {\n    console.log(\"no internet doing default\", error, JSON.stringify(data));\n    location.reload();\n  });*/\n}\n\nsbtn.addEventListener('click', function (e) {\n  //console.log(verse)\n  prompt = complete ? 0 : 3;\n  cur = prompt;\n  verse = quote ? 0 : random(0, te.length - 1);\n  count = quote ? 0 : 300;\n  time = count;\n  dtimer.textContent = Math.floor(time / 60) + \":\" + (time % 60 ? time % 60 : '00');\n  up = quote ? 1 : -1;\n\n  if (chset.value !== \"\" && qset.value !== \"\" && pset.value !== \"\") {\n    started = true;\n    domref.innerHTML = book + \" \" + chapter + \":\" + (verse + 1);\n    domver.innerHTML = \"\";\n    domscore.innerHTML = \"score: \" + score;\n\n    for (var i = 0; i < cur; i++) {\n      domver.innerHTML += te[verse].split(/\\s/g)[i] + \" \";\n      _lib_ResponsiveVoice_js__WEBPACK_IMPORTED_MODULE_0__[\"speak\"](te[verse].split(/\\s/g)[i], \"US English Male\", {\n        pitch: 1,\n        volume: 0.5,\n        rate: 1\n      });\n    }\n\n    tq.style.display = \"block\";\n    set.style.display = \"none\";\n    var text = te[verse].toLowerCase();\n    text = text.replace(/([^abcdefghijklmnopqrstuvwxyz\\s0-9])([^abcdefghijklmnopqrstuvwxyz\\s0-9])/gi, \"$1$2 \").split(/\\s/g); //console.log()\n\n    if (text[text.length - 1] === \"\") {\n      text.pop();\n    }\n\n    for (var i = 0; i < text.length; i++) {\n      if (text[i] === \"\") {\n        text.splice(i - 1, i);\n      }\n    }\n\n    if (complete) {\n      _lib_ResponsiveVoice_js__WEBPACK_IMPORTED_MODULE_0__[\"speak\"](book + \" \" + chapter + \":\" + (verse + 1), \"US English Male\", {\n        pitch: 1,\n        volume: 0.5,\n        rate: 1\n      });\n    }\n\n    wbox(text);\n  }\n});\n\nvar gettextListener = function gettextListener() {\n  var str = this.responseText;\n  str = str.split(\" 1 \"); //splits to chapters\n\n  for (var i = 0; i < str.length; i++) {\n    str[i] = str[i].split(/[0-9]+\\s/); //splits to verses\n\n    for (var j = 0; j < str[i].length; j++) {\n      str[i][j] = str[i][j].replace(/[-\\/\\\\^$*+?.()|[\\]{}\"';:,!“—”]|[0-9]|\\n/g, \" \").trim().replace(/\\s\\s\\s/g, \" \").replace(/\\s\\s/g, \" \").replace(/\\s\\s/g, \" \"); //cleans\n    }\n  }\n\n  tex = str;\n};\n\nqset.addEventListener('input', function (e) {\n  if (e.target.value === \"c\") {\n    quote = false;\n  } else {\n    quote = true;\n  }\n});\npset.addEventListener('input', function (e) {\n  if (e.target.value === \"y\") {\n    complete = false;\n  } else {\n    complete = true;\n  }\n});\nchset.addEventListener('input', function (e) {\n  //console.log(e.target.value)\n  //console.log(\"changed\")\n  ch = e.target.value;\n\n  if (ch.indexOf(\"1p\") !== -1) {\n    c = 13 + parseFloat(ch.split(\"p\")[1]);\n    chapter = parseFloat(ch.split(\"p\")[1]);\n    book = \"1peter\";\n    console.log(c);\n  } else if (ch.indexOf(\"2p\") !== -1) {\n    c = 18 + parseFloat(ch.split(\"p\")[1]);\n    chapter = parseFloat(ch.split(\"p\")[1]);\n    book = \"2peter\";\n    console.log(c);\n  } else {\n    c = ch.split(\"h\")[1];\n    chapter = c;\n    book = \"hebrews\";\n    console.log(c);\n  }\n\n  te = tex[c]; //console.log(te);\n\n  verse = quote ? 0 : random(0, te.length - 1); //console.log(verse);\n\n  domref.innerHTML = book + \" \" + chapter + \":\" + (verse + 1);\n});\ndocument.addEventListener(\"keydown\", function (e) {\n  if (started) {\n    e.preventDefault();\n    key = keys[e.keyCode];\n    var vchange = quote ? verse + 1 : random(1, te.length - 1); //console.log(te)\n\n    var text = te[verse]; //console.log(text)\n\n    text = text.replace(/([^abcdefghijklmnopqrstuvwxyz\\s0-9])([^abcdefghijklmnopqrstuvwxyz\\s0-9])/gi, \"$1$2 \").split(/\\s/g); //console.log()\n\n    if (text[text.length - 1] === \"\") {\n      text.pop();\n    }\n\n    if (cur === text.length && text[cur].substr(0, 1).toLowerCase() === key && key !== undefined) {\n      verse = vchange;\n      nextver(verse);\n    } else if (text[cur].substr(0, 1).toLowerCase() === key && key !== undefined) {\n      //console.log(text[cur] + \"-word\")\n      var dword = document.getElementById(text[cur].toLowerCase().replace(/[-\\/\\\\^$*+?.,()|[\\]{}]/g, '-') + \"-word\");\n      dword.style.display = \"none\";\n\n      if (cur !== text.length - 1) {\n        _lib_ResponsiveVoice_js__WEBPACK_IMPORTED_MODULE_0__[\"speak\"](text[cur], \"US English Male\", {\n          pitch: 1,\n          volume: 0.5,\n          rate: 1\n        });\n      }\n\n      score += 10;\n      domver.innerHTML = \"\";\n      domscore.innerHTML = \"score: \" + score;\n\n      for (var i = 0; i < cur + 1; i++) {\n        domver.innerHTML += text[i] + \" \";\n      } //console.log(key);\n\n\n      cur++; //console.log(cur,text.length)\n\n      if (cur === text.length) {\n        verse = vchange;\n        nextver(verse);\n      }\n    } else {\n      console.log(\"wrong\");\n      score -= 5;\n      domscore.innerHTML = \"score: \" + score;\n      error.play();\n    }\n  }\n});\n\nvar countIt = function countIt() {\n  //console.log(parseFloat(time))\n  if (started) {\n    if (quote) {\n      if (verse < te.length) {\n        time = time + up;\n        dtimer.textContent = Math.floor(time / 60) + \":\" + (time % 60 ? time % 60 : '00');\n      } else {\n        window.clearInterval(timer);\n        postData(\"/postquote\", JSON.stringify({\n          ch: ch,\n          score: time,\n          prompt: prompt,\n          user: JSON.parse(localsave(\"userdata\", \"get\")).name,\n          pass: JSON.parse(localsave(\"userdata\", \"get\")).pass\n        }), function (data) {\n          console.log(JSON.stringify(data));\n          location.reload();\n        });\n      }\n    } else {\n      if (time > 0) {\n        time = time + up;\n        dtimer.textContent = Math.floor(time / 60) + \":\" + (time % 60 ? time % 60 : '00');\n        ;\n      } else {\n        console.log(JSON.stringify({\n          ch: ch,\n          score: score,\n          prompt: prompt,\n          name: JSON.parse(localsave(\"userdata\", \"get\")).name,\n          pass: JSON.parse(localsave(\"userdata\", \"get\")).pass\n        }));\n        window.clearInterval(timer);\n        console.log(JSON.parse(localsave(\"userdata\", \"get\")));\n        postData(\"/postcomplete\", JSON.parse(JSON.stringify({\n          ch: ch,\n          score: score,\n          prompt: prompt,\n          user: JSON.parse(localsave(\"userdata\", \"get\")).name,\n          pass: JSON.parse(localsave(\"userdata\", \"get\")).pass\n        })), function (data) {\n          console.log(JSON.stringify(data));\n          location.reload();\n        });\n      }\n    }\n  }\n};\n\nvar timer = window.setInterval(countIt, 1000);\nvar hebrewsRequest = new XMLHttpRequest();\nhebrewsRequest.onload = gettextListener;\nhebrewsRequest.open('get', '/gettext');\nhebrewsRequest.send();\npostData(\"/postquote\", JSON.stringify({\n  ch: \"h2\",\n  score: 221,\n  prompt: false,\n  user: JSON.parse(localsave(\"userdata\", \"get\")).name,\n  pass: JSON.parse(localsave(\"userdata\", \"get\")).pass\n}), function (data) {\n  console.log(JSON.stringify(data));\n  location.reload();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/js/raw/plain/typequiz.js\n");

/***/ })

/******/ });